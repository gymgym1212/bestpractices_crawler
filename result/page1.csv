,id,user_id,name,description,homepage_url,repo_url,license,homepage_url_status,homepage_url_justification,sites_https_status,sites_https_justification,description_good_status,description_good_justification,interact_status,interact_justification,contribution_status,contribution_justification,contribution_requirements_status,contribution_requirements_justification,license_location_status,license_location_justification,floss_license_status,floss_license_justification,floss_license_osi_status,floss_license_osi_justification,documentation_basics_status,documentation_basics_justification,documentation_interface_status,documentation_interface_justification,repo_public_status,repo_public_justification,repo_track_status,repo_track_justification,repo_interim_status,repo_interim_justification,repo_distributed_status,repo_distributed_justification,version_unique_status,version_unique_justification,version_semver_status,version_semver_justification,version_tags_status,version_tags_justification,release_notes_status,release_notes_justification,release_notes_vulns_status,release_notes_vulns_justification,report_url_status,report_url_justification,report_tracker_status,report_tracker_justification,report_process_status,report_process_justification,report_responses_status,report_responses_justification,enhancement_responses_status,enhancement_responses_justification,report_archive_status,report_archive_justification,vulnerability_report_process_status,vulnerability_report_process_justification,vulnerability_report_private_status,vulnerability_report_private_justification,vulnerability_report_response_status,vulnerability_report_response_justification,build_status,build_justification,build_common_tools_status,build_common_tools_justification,build_floss_tools_status,build_floss_tools_justification,test_status,test_justification,test_invocation_status,test_invocation_justification,test_most_status,test_most_justification,test_policy_status,test_policy_justification,tests_are_added_status,tests_are_added_justification,tests_documented_added_status,tests_documented_added_justification,warnings_status,warnings_justification,warnings_fixed_status,warnings_fixed_justification,warnings_strict_status,warnings_strict_justification,know_secure_design_status,know_secure_design_justification,know_common_errors_status,know_common_errors_justification,crypto_published_status,crypto_published_justification,crypto_call_status,crypto_call_justification,crypto_floss_status,crypto_floss_justification,crypto_keylength_status,crypto_keylength_justification,crypto_working_status,crypto_working_justification,crypto_pfs_status,crypto_pfs_justification,crypto_password_storage_status,crypto_password_storage_justification,crypto_random_status,crypto_random_justification,delivery_mitm_status,delivery_mitm_justification,delivery_unsigned_status,delivery_unsigned_justification,vulnerabilities_fixed_60_days_status,vulnerabilities_fixed_60_days_justification,vulnerabilities_critical_fixed_status,vulnerabilities_critical_fixed_justification,static_analysis_status,static_analysis_justification,static_analysis_common_vulnerabilities_status,static_analysis_common_vulnerabilities_justification,static_analysis_fixed_status,static_analysis_fixed_justification,static_analysis_often_status,static_analysis_often_justification,dynamic_analysis_status,dynamic_analysis_justification,dynamic_analysis_unsafe_status,dynamic_analysis_unsafe_justification,dynamic_analysis_enable_assertions_status,dynamic_analysis_enable_assertions_justification,dynamic_analysis_fixed_status,dynamic_analysis_fixed_justification,general_comments,created_at,updated_at,crypto_weaknesses_status,crypto_weaknesses_justification,test_continuous_integration_status,test_continuous_integration_justification,cpe,discussion_status,discussion_justification,no_leaked_credentials_status,no_leaked_credentials_justification,english_status,english_justification,hardening_status,hardening_justification,crypto_used_network_status,crypto_used_network_justification,crypto_tls12_status,crypto_tls12_justification,crypto_certificate_verification_status,crypto_certificate_verification_justification,crypto_verification_private_status,crypto_verification_private_justification,hardened_site_status,hardened_site_justification,installation_common_status,installation_common_justification,build_reproducible_status,build_reproducible_justification,badge_percentage_0,achieved_passing_at,lost_passing_at,last_reminder_at,disabled_reminders,implementation_languages,lock_version,badge_percentage_1,dco_status,dco_justification,governance_status,governance_justification,code_of_conduct_status,code_of_conduct_justification,roles_responsibilities_status,roles_responsibilities_justification,access_continuity_status,access_continuity_justification,bus_factor_status,bus_factor_justification,documentation_roadmap_status,documentation_roadmap_justification,documentation_architecture_status,documentation_architecture_justification,documentation_security_status,documentation_security_justification,documentation_quick_start_status,documentation_quick_start_justification,documentation_current_status,documentation_current_justification,documentation_achievements_status,documentation_achievements_justification,accessibility_best_practices_status,accessibility_best_practices_justification,internationalization_status,internationalization_justification,sites_password_security_status,sites_password_security_justification,maintenance_or_update_status,maintenance_or_update_justification,vulnerability_report_credit_status,vulnerability_report_credit_justification,vulnerability_response_process_status,vulnerability_response_process_justification,coding_standards_status,coding_standards_justification,coding_standards_enforced_status,coding_standards_enforced_justification,build_standard_variables_status,build_standard_variables_justification,build_preserve_debug_status,build_preserve_debug_justification,build_non_recursive_status,build_non_recursive_justification,build_repeatable_status,build_repeatable_justification,installation_standard_variables_status,installation_standard_variables_justification,installation_development_quick_status,installation_development_quick_justification,external_dependencies_status,external_dependencies_justification,dependency_monitoring_status,dependency_monitoring_justification,updateable_reused_components_status,updateable_reused_components_justification,interfaces_current_status,interfaces_current_justification,automated_integration_testing_status,automated_integration_testing_justification,regression_tests_added50_status,regression_tests_added50_justification,test_statement_coverage80_status,test_statement_coverage80_justification,test_policy_mandated_status,test_policy_mandated_justification,implement_secure_design_status,implement_secure_design_justification,input_validation_status,input_validation_justification,crypto_algorithm_agility_status,crypto_algorithm_agility_justification,crypto_credential_agility_status,crypto_credential_agility_justification,signed_releases_status,signed_releases_justification,version_tags_signed_status,version_tags_signed_justification,badge_percentage_2,contributors_unassociated_status,contributors_unassociated_justification,copyright_per_file_status,copyright_per_file_justification,license_per_file_status,license_per_file_justification,small_tasks_status,small_tasks_justification,require_2FA_status,require_2FA_justification,secure_2FA_status,secure_2FA_justification,code_review_standards_status,code_review_standards_justification,two_person_review_status,two_person_review_justification,test_statement_coverage90_status,test_statement_coverage90_justification,test_branch_coverage80_status,test_branch_coverage80_justification,security_review_status,security_review_justification,assurance_case_status,assurance_case_justification,achieve_passing_status,achieve_passing_justification,achieve_silver_status,achieve_silver_justification,tiered_percentage,repo_url_updated_at,achieved_silver_at,lost_silver_at,achieved_gold_at,lost_gold_at,first_achieved_passing_at,first_achieved_silver_at,first_achieved_gold_at,maintained_status,maintained_justification
0,1,25,BadgeApp,"BadgeApp is the web application that allows developers to provide information about their project and (hopefully) get an Open Source Security Foundation (OpenSSF) Best Practices badge. This project was originally known as the Core Infrastructure Initiative (CII) best practices badge project.

The Open Source Security Foundation (OpenSSF) is managed by The Linux Foundation.  The OpenSSF Best Practices badge online application (aka the BadgeApp) enables developers to quickly determine whether they are following best practices and to receive a badge they can display on GitHub and other locations. The application and its criteria are an open source project to which developers can contribute.

You can see the program running, and use it to try to get a badge, by visiting: https://bestpractices.coreinfrastructure.org/

The BadgeApp is written in Ruby on Rails and Javascript.

See the development site on GitHub for more about how we secure this application.

Note that the BadgeApp gets its own badge!",https://github.com/coreinfrastructure/best-practices-badge,https://github.com/coreinfrastructure/best-practices-badge,MIT,?,,Met,"The project website and repo use GitHub, which supports HTTPS using TLS.  There's no separate download URL (use git to download from the repo).",Met,https://github.com/linuxfoundation/cii-best-practices-badge,Met,https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md,Met,https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md,Met,https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md,Met,It's in the LICENSE file in the top level directory.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE,Met,The MIT license is widely acknowledged as being OSS.  The license is at https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,"The directory ""doc"" contains most documentation. Installation information is at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/INSTALL.md and other materials are at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/",Met,Its interface is defined here: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md#interface,Met,"It uses git, URL is https://github.com/linuxfoundation/cii-best-practices-badge",Met,"Uses git to track this. Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,"Interim versions are put on git, not just final versions.",Met,"Uses git. Repository on GitHub, which uses git. git is distributed.",Met,The primary single user uses git commit records to identify releases.,Unmet,"BadgeApp undergoes continuous integration and is then deployed to a single site, <https://bestpractices.coreinfrastructure.org/>.  We used Semantic Versioning for a while, but SemVer is a poor fit for this kind of situation, and we eventually gave up the practice.  Every version continues to have a unique version identifier: the git commit id.",Met,Full releases are tagged using 'git tag'.,Met,"CHANGELOG file is in top directory, see: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CHANGELOG.md",Met,"We intend to do that, though we don't know of any for-certain publicly known vulnerabilities.

Our release notes do document that commit fdb83380 on 2015-11-26 updated gem nokogiri from 1.6.6.2 to 1.6.6.4 due to CVE-2015-1819.  It's not clear if our application was actually vulnerable; it was easier to simply upgrade.  In any case, we upgraded immediately, and this is documented in our release notes.
",?,,Met,"Yes, GitHub issue tracker.",Met,"Yes, either GitHub issue tracker or mailing list.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/README.md",Met,"Yes.  Not many have been submitted so far, but we've responded.",Met,The project has been responding to most enhancement requests.,Met,"Yes, via GitHub isue tracker: https://github.com/linuxfoundation/cii-best-practices-badge/issues",Met,https://github.com/linuxfoundation/cii-best-practices-badge/issues,Met,https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md,Met,"No external reports so far, so this is vacuously true.",,"The software is written using Ruby and Javascript, and their implementations run directly on the source code.",,Note that a Gemfile.lock file and Rake tasks are provided to enable others to quickly recreate a development environment.,,,Met,"Yes, it includes a test suite based on minitest (the test framework that comes with Rails).",Met,"Yes. ""rake test"" invokes the automated test suite. The default ""rake"" command includes ""rake test"".  This is documented in [CONTRIBUTING.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/CONTRIBUTING.md).",Met,"Met.  Currently coverage of the ruby code is over 90%, and most of the code is in Ruby.",Met,"Yes.  The CONTRIBUTING file at <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md> says,  ""When adding or changing functionality, please include new tests for them as part of your contribution"". Also, the project home page shows the test coverage, which encourages adding tests as new functionality is added.",Met,Tests are added as new functionality is added.,Met,"Yes.  The CONTRIBUTING file at <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md> says,  ""When adding or changing functionality, please include new tests for them as part of your contribution"".",Met,"The set of tools used for examining code quality are listed in [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md).

The project uses rubocop and rails_best_practices to check for code quality errors in Ruby code; eslint is used to look for problems in Javascript.  The markdown documentation is scanned with markdownlink.",Met,In general warnings are addressed.  In some cases warnings are disabled for specific cases.,Met,The settings for the warning tools are generally fairly strict.,Met,"David A. Wheeler, lead developer, literally wrote the code on how to design secure software: http://www.dwheeler.com/secure-programs",Met,"For a discussion of security requirements, common types of security vulnerabilities, and how this application counters those common kinds of vulnerabilities, see: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/security.md",Met,"The software uses bcrypt to store salted hashed iterated passwords, and https+standard crypto protocols to communicate with users.",Met,"Uses 'bcrypt' gem for bcrypt, and https implementation built into its web server.",Met,"All required functionality is implemented using FLOSS, including cryptography.",,"Note: This application uses bcrypt, which uses 128-bit salt and produces 184 bits as a salted encrypted iterated hash.  This is less than 224 bits, but that's not really what the 224 bits of hash are for.  This probably needs clarification in the criteria; see https://github.com/linuxfoundation/cii-best-practices-badge/issues/153",Met,"The only cryptographic algorithm directly used by the program is bcrypt, which is not broken.",,Nothing in the code inhibits or prevents the use of PFS; that is a property of the website's web server.,Met,Bcrypt used for storing local passwords.,Met,"The nonce for the salt is created by the bcrypt gem; its engine.rb file shows that it uses OpenSSL to get cryptographically random data for the salt (on Java it would use SecureRandom, which is still fine, but that is not the default configuration). Other nonces are part of the https implementation, which are implemented by the web server (not this application).",Met,Uses https.,Met,Does not make this mistake.,Met,No such vulnerabilities at this time.,Met,No such vulnerabilities at this time.,Met,"As noted in <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md>, Brakeman, Rubocop, and rails_best_practices are used to analyze the Ruby code.  Brakeman is specifically designed to analyze Ruby on Rails code.  The Javascript client-side code is analyzed with ESLint, using over 100 rules.

These analysis tools are used as part of the default 'rake' process used in local development, as well as the ""pronto"" process run on the continuous integration server running on CircleCI.",Met,Brakeman specifically looks for common vulnerabilities in Ruby on Rails applications.,Met,"This is vacuously true, since we've had no reports of vulnerabilities that apply to a deployed system.",Met,"All commits to GitHub are run through CircleCI, which performs a number of static analysis checks (Brakeman, Rubocop, etc.).",Met,Analyzed with OWASP ZAP by Emily Ratliff,,"Application written using Ruby and Javascript, not C/C++",Unmet,"Instead of embedding run-time assertions, there are many external tests with assertions that are checked during automated testing.",Met,A few minor issues were found by OWASP ZAP during development; these have already been fixed.,"We hope to see many other projects get their badge. Please start!

Note that this badge entry is released under at least the Creative Commons Attribution version 3.0 or later license (CC-BY-3.0+).",2015-10-23 22:02:10 UTC,2021-12-23 18:04:44 UTC,Met,"The only cryptography used directly by this application is bcrypt  (used for storing passwords as salted iterated hashes).  At the time of this writing, no serious breaks are known in bcrypt.  The application also depends on the web server's https configuration, but that is out of scope for this code.",Met,"Code is frequently integrated back into GitHub; CircleCI and several other tools are then run on the result to determine if there's a problem.  If a problem is found, the tools provide feedback via GitHub.  For more information, see the [BadgeApp's status on CircleCI](https://circleci.com/gh/coreinfrastructure/best-practices-badge).",,Met,GitHub issue tracker and pull requests support discussion,Met,"No valid private credentials are leaked.  There is a [.env](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/.env) file, but it only includes stub data for testing, not the live credentials.",Met,"All documentation is in English, and the project accepts bug reports and comments in English.",Met,"We use various HTTP headers for hardening, including a rigorous Content Security Policy (CSP) setting.  For more information, see [security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/security.md) which discusses the hardening mechanisms.",Met,https://github.com/linuxfoundation/cii-best-practices-badge,Met,"Github uses TLS 1.2, see <https://github.com/linuxfoundation/cii-best-practices-badge>.",Met,"The software does not directly implement TLS, instead, it depends on the webserver and Ruby libraries to implement TLS - including certificate checking.  That said, there *is* a case where TLS certificate verification is necessary.

The only case where TLS certificate verification matters is that this application uses OAuth for access delegation (in this case, we contact GitHub to determine if someone is the claimed GitHub user).  In this case it *does* need to verify the TLS certificate, because if anyone could pretend to be the access delagatee (e.g., GitHub) then they could claim anything.  The application does not do this directly, instead this is done by the gems (Ruby libraries) we call for this purpose, which perform this checking.

Other than that, this application does not use TLS certificate verification.  That's because it implements a server-side application, not a client-side application, and uses name/password or GitHub authentication for user authentication (not TLS certificates).",Met,"The software does not directly implement TLS, instead, it depends on the webserver and Ruby libraries to implement TLS - including certificate checking.  That said, there *is* a case where TLS certificate verification is necessary, and this is supported (indirectly) by the systems it depends on.

The only case where TLS certificate verification matters is that this application uses OAuth for access delegation (in this case, we contact GitHub to determine if someone is the claimed GitHub user).  In this case it *does* need to verify the TLS certificate, because if anyone could pretend to be the access delagatee (e.g., GitHub) then they could claim anything.  The application does not do this directly, instead this is done by the gems (Ruby libraries) we call for this purpose, which perform this checking.

Other than that, this application does not use TLS certificate verification.  That's because it implements a server-side application, not a client-side application, and uses name/password or GitHub authentication for user authentication (not TLS certificates).",Met,"We use GitHub, and [securityheaders.io verifies that our sites meet this criterion](https://securityheaders.io/?q=https%3A%2F%2Fgithub.com%2Fcoreinfrastructure%2Fbest-practices-badge&followRedirects=on).",Met,"We include an install script, `install_badge_dev_env` which allows devs to quickly install the software for development.  This script uses calls to various package managers to install all necessary dependencies quickly and easily.  The uninstall process is documented in [doc/INSTALL.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/INSTALL.md).",,"The code is written in Ruby and Javascript, which are not delivered as compiled executables.",100,2016-01-12 22:55:00 UTC,,,False,"Ruby, JavaScript",74,100,Met,"We require a DCO for contributions, as documented in https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md which says:

> All contributions (including pull requests) must agree to the [Developer Certificate of Origin (DCO) version 1.1](doc/dco.txt).
This is exactly the same one created and used by the Linux kernel developers and posted on <http://developercertificate.org/>. This is a developer's certification that he or she has the right to submit the patch for inclusion into the project.
",Met,The governance mode of the Badge app is outlined in on our GitHub repository within [doc/governance.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/governance.md),Met,See [CODE_OF_CONDUCT](https://github.com/coreinfrastructure/best-practices-badge/blob/master/CODE_OF_CONDUCT.md).,Met,"The document [doc/governance.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/governance.md) describes the key roles, which are basically ""technical lead"" and ""others with commit rights"".  It also identifies who has those roles.",Met,"This project is run by the Linux Foundation, a 501(c)6.  Multiple people are authorized to do all these activities (create and close issues, accept proposed changes, and release versions of software), including David A. Wheeler, Jason Dossett, Marcus Streets, Nicko van Someren, and Dan Kohn.  See [CREDITS])(https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CREDITS.md). The Linux Foundation could authorize others, if needed.  Thus, the project can continue even if any one person is incapacitated or killed.",Met,"David A. Wheeler, Jason Dossett, and Dan Kohn are all very familiar with the software and could easily continue its maintenance if necessary.  Many other people have contributed per [CREDITS](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CREDITS.md) and several of them could also probably maintain it if absolutely necessary. See [GitHub contributors statistics](https://github.com/coreinfrastructure/best-practices-badge/graphs/contributors) for the latest statistics on contributors.",Met,"The [project roadmap](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/roadmap.md) explains these things.  Note that the project is in sustainment, so we're focusing more on continuous smaller improvements instead of massive changes.",Met,The design is documented in [doc/implementation.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md),Met,The security requirements and assurance case are documented in [doc/security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md).,Met,"The [doc/INSTALL.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/INSTALL.md) installation manual also includes ""quick start"" information to help someone get started.  In particular, it describes how to start up the program, access it via a web browser, become an administrator, and access its internal state to perform a few tasks.",Met,"We routinely update the documentation when a new capability is added.

For example, when the software was modified on 2017-05-27 to support a separate runtime configuration environment variable to set the database pool size (originally commit 8eef5e77ec5b08bc6714e2aa5a6139e71e55ff2b), by the next day (2017-05-28) in commit 1a8bcb5c5b40751ca874bd0b550f25a6aa8d7ea5 the documentation was modified to record it.",Met,"We record on our [homepage](https://github.com/linuxfoundation/cii-best-practices-badge) that we have a CII best practices badge, good code coverage, and that we use CircleCI as our continuous integration (CI) system.",Met,"We generally follow accessibility best practices, e.g., we provide ALT values for images where relevant.

We use this website to find accessibility problems:
https://achecker.ca/checker/index.php
We've checked the following paths (these are key forms in the system): ""/"", ""/signup"", ""/login"", ""/projects"", and ""/projects/1"".  There are no known problems and no likely problems.",Met,"The software is internationalized using standard [Ruby on Rails mechanisms](http://guides.rubyonrails.org/i18n.html).  This data is then sent on to the JavaScript code where appropriate.  We use translation.io to manage the translations.
",Met,"We use [GitHub, who meet this criterion](https://help.github.com/articles/github-security/).",Met,"Normally only a single version of the product is in production use.  That said, it's important to handle upgrades, especially so that various developers can upgrade.  How to upgrade is documented in [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md).

Here is a summary of common cases:
* Upgrading often involves a database migration, which is handled by running ""rake db:migration"" (if the user forgets to do this, it is detected, running stops, and this information is presented).
* Other upgrades generally involve installing updated gems (libraries), which are handled with ""bundle update"".
* In rare cases an update to the Ruby language is needed; the steps to do this are also in [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md).",,"We've never had an external bug reporter.

[CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) notes that:

> We will gladly give credit to anyone who reports a vulnerability so that we can fix it. If you want to remain anonymous or pseudonymous instead,  please let us know that; we will gladly respect your wishes.

This is emphasized in the vulnerability report handling process [doc/security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md), where the last step is giving credit.",Met,The vulnerability report handling process is documented in [doc/security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md).,Met,"[CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) documents our coding style guides.

As documented there:
* For Ruby on Rails, we generally follow the [community Ruby style guide](https://github.com/bbatsov/ruby-style-guide) and the complementary [community Rails style guide](https://github.com/bbatsov/rails-style-guide).
* For JavaScript, our coding style is based on the [Node.js style guide](https://github.com/felixge/node-style-guide).",Met,"[CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) documents our coding style enforcement mechanisms.

As documented there:
* For Ruby on Rails, we use rubocop and rails_best_practices for style enforcement (as well as Brakeman to find vulnerabilities)
* For JavaScript, we ESLint.",,"The application does not create native binaries.  (Some of the libraries it depends on do, but those are external.)",,"The application does not create native binaries.  (Some of the libraries it depends on do, but those are external.)",,"The application does not create native binaries.  (Some of the libraries it depends on do, but those are external.)",,"The application does not create native binaries.  (Some of the libraries it depends on do, but those are external.)  It is written in scripting languages where the source code is used directly.",,"There is no installation system for build artifacts, as it's written using scripts.

It could be said that Rails builds web application assets (e.g., minified and concatenated JavaScript, and combined CSS); under that interpretation, they are written by the Rails framework as part of the execution of the Rails asset pipeline, and this is controlled in the usual way by controlling the framework.",Met,"The software is installed using standard conventions for this kind of software.  The underlying Ruby libraries are installed using bundler (the usual Ruby package manager).  Lower-level system components are normally installed using the system package manager.

It's possible to install these quickly, using a provided installation shell script that determines which system package manager to use & tries to automatically install whatever is needed, including the tests and test environment.  The instructions for quickly installing everything is in [INSTALL.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/INSTALL.md).",Met,External dependencies are stored in a [Gemfile](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/Gemfile).,Met,"External dependency checking is performed in two ways:

* bundle_audit.  This checks all gems for known vulnerabilities.  This is run on every execution of the ""rake"" local check task and on every run of the continuous integration task on CircleCI.
* [Gemnasium](https://gemnasium.com/linuxfoundation/cii-best-practices-badge).  This also checks gems for known vulnerabilities, and puts the current status on a badge that is displayed on the front page of the project home page.

For the few external dependencies that aren't managed as gems (e.g., PostgreSQL) the system package managers and/or the deployment system's managers are used to maintain them & periodically check them.",Met,"The project uses bundler, the standard package management solution for Ruby, for most externally-maintained components.  For the rest (e.g., PostgreSQL) it uses the system package manager.",Met,We avoid depending on deprecated/obsolete functions.,Met,"We use [CircleCI](https://circleci.com/gh/linuxfoundation/cii-best-practices-badge) to automatically test every check in to any branch in our repository.  I some circumstances experimental branches which do not yet run even in a development environment may be ignored via a custom entry in our circle.yml file.  The master, staging, and production  branches are always tested.",Met,"When regressions occur, we add tests for them.",Met,"As of this writing, we have 100% statement coverage, see [Codecov.io](https://codecov.io/gh/linuxfoundation/cii-best-practices-badge).",Met,"Yes, this is a documented policy in [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) which says:

> When adding or changing functionality, please include new tests for them as part of your contribution.",Met,"They are implemented, as described in [doc/security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/security.md).
",Met,"All inputs from potentially untrusted sources are checked & rejected if they are invalid.  Some, such as justifications, only have a few limitations (must be UTF-8 and have a limited length). For more information, see [security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/security.md).",,"This implements a web application, and the (external) web server determines what cryptographic algorithms are in use by the user.  If the web server supports multiple cryptographic algorithms (and it usually would), then the application does.  The functionality that calls out to other systems (e.g., OAUTH for GitHub, and data access for the detectives) are also external (and they support multiple algorithms anyway).",Met,"All authentication credentials can be provided via environment variables when run in production, so no useful key is stored in the source code.",,"Releases are not intended for widespread use in many different sites, so this is N/A.
",Unmet,"In production the software is run in a single site, so the need for signed versions is less.",100,Met,"There are [at least 22 contributors](https://github.com/coreinfrastructure/best-practices-badge/graphs/contributors), and at least three significant contributors today: David A. Wheeler (IDA), Jason Dossett (IDA), and Dan Kohn (Linux Foundation).  For this work, IDA works for the Core Infrastructure Initiative (CII), which is a project of the Linux Foundation (LF). However, the LF is itself a [nonprofit mutual benefit corporation (specifically a Section 501(c)(6))](https://www.linuxfoundation.org/bylaws/).  As a nonprofit mutual benefit corporation, the LF is directed by other organizations which actually provide funding to do this work, and thus the LF and CII can be viewed as ""pass through"" organizations as described in this criterion.
",Met,Each source file has a copyright statement in its header.  See [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) for the instructions for Ruby (nearly all source files are in Ruby).,Met,Each source file has a copyright statement in its header (MIT).  See [CONTRIBUTING.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md) for the instructions for Ruby source files (nearly all source files are in Ruby).,Met,"We use the ""up-for-grabs"" tag.  This is noted on the [front page of the repo](https://github.com/coreinfrastructure/best-practices-badge).",Met,The Core Infrastructure Initiative (CII) requires two-factor authentication for all organization members and outside collaborators as described in [Requiring two-factor authentication in your organization](https://help.github.com/articles/requiring-two-factor-authentication-in-your-organization/).,Met,Project governance specifically documents that SMS is not acceptable; see [governance.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/governance.md).,Met,"The file [CONTRIBUTING.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/CONTRIBUTING.md) describes the code review requirements.  E.G., changes to the code built on Rails must follow the [Rails community style guide](https://github.com/bbatsov/rails-style-guide).  The continuous integration tasks run a large number of checks, e.g., all Ruby code must go through Rubocop, and all JavaScript code must go through ESLint (with the given conditions).  We absolutely require that the Ruby code have at least 90% statement coverage, but we typically don't accept statement coverage less than 100%.",Met,"We have a policy in [CONTRIBUTING.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/CONTRIBUTING.md) that modifications other than low-risk modifications be reviewed by someone else, and a stated goal of having at least 50% of all proposed modifications to be reviewed.",Met,"As of this writing, we have 100% statement coverage, see [Codecov.io](https://codecov.io/gh/linuxfoundation/cii-best-practices-badge).",,"There are no top-to-bottom FLOSS tools available in Ruby which can measure branch coverage.   Ruby version 2.5 was the first version that enabled capturing branch coverage, and it was only released on 2017-12-25.  Other tools on top of Ruby need to be modified so that they can use this information, e.g., [simplecov issue 412](https://github.com/colszowka/simplecov/issues/412) proposed adding branch coverage support to simplecov.",Met,"We have performed a self-assessment of our security, and it is documented in [security.md](https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/security.md).  This considered the security requirements and security boundary, and examined the high-level architecture.  We used static & dynamic tools, as well as human review (especially of the major design components).  This was *not* an independent evaluation, but the criterion doesn't require that.",Met,The security requirements and assurance case are documented in [doc/security.md](https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md).,Met,,Met,,300,,,,,,2016-01-12 22:55:00 UTC,,,Met,
1,24,38,OWASP Zed Attack Proxy (ZAP),OWASP Zed Attack Proxy (ZAP) is an easy to use integrated penetration testing tool for finding vulnerabilities in web applications.  It is designed to be used by people with a wide range of security experience and as such is ideal for developers and functional testers who are new to penetration testing.  ZAP provides automated scanners as well as a set of tools that allow you to find security vulnerabilities manually.,https://www.zaproxy.org,https://github.com/zaproxy/zaproxy,Apache-2.0,?,,Met,,Met,,Met,https://github.com/zaproxy/zaproxy/blob/main/CONTRIBUTING.md,Met,See https://github.com/zaproxy/zaproxy/wiki/GetInvolved and https://github.com/zaproxy/zaproxy/wiki/Contributing-Changes,Met,See https://github.com/zaproxy/zaproxy/wiki/DevGuidelines,Met,License is in top-level directory file <https://github.com/zaproxy/zaproxy/blob/main/LICENSE>.,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,"See https://www.zaproxy.org ; ZAP includes help documentation and user guide, and the wiki provides additional documentation.",Met,"See https://github.com/zaproxy/zaproxy/wiki/DevExtending and https://github.com/zaproxy/zaproxy/wiki/ApiDetails
",Met,See https://github.com/zaproxy/zaproxy/,Met,"The ChangeLogs are linked-to from https://www.zaproxy.org/docs/desktop/releases/ . Detailed change history is also available via
 https://github.com/zaproxy/zaproxy/commits/main and https://github.com/zaproxy/zap-extensions/commits/main
 Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Uses git. Repository on GitHub, which uses git. Git is distributed. Repository on GitHub, which uses git. git is distributed.",Met,"An example version number is ""2.4.3"".  Since 2.4.0 it has used semantic versioning; see https://github.com/zaproxy/zaproxy/blob/main/src/org/zaproxy/zap/Version.java",Met,,Met,"git tags are used to tag release versions, e.g., ""2.4.3"".  See https://github.com/zaproxy/zaproxy/tree/main",Met,Full details of all releases are included in the ZAP User Guide which is included with ZAP and available online: https://www.zaproxy.org/docs/desktop/releases/,Met,"Yes, for an example see: https://www.zaproxy.org/docs/desktop/releases/2.11.0/",?,,Met,GitHub issue tracker https://github.com/zaproxy/zaproxy/issues,Met,The page https://www.zaproxy.org/community/ provides an overview. It states that bug reports (and feature suggestions) are to be submitted via https://github.com/zaproxy/zaproxy/issues,Met,,Met,,Met,GitHub issue tracker at https://github.com/zaproxy/zaproxy/issues,Met,https://github.com/zaproxy/zaproxy/blob/main/CONTRIBUTING.md#found-a-vulnerability,Met,https://github.com/zaproxy/zaproxy/blob/main/CONTRIBUTING.md#found-a-vulnerability,Met,,Met,"A build summary is here: https://github.com/zaproxy/zaproxy/blob/main/BUILDING.md . Developer documentation is available via: https://www.zaproxy.org/docs/developer/
",Met,"The recommended build tools include Eclipse IDE for Java Developers and a Java development environment. The builds are done via Gradle, which is a common tool for Java programs; see: https://github.com/zaproxy/zaproxy/blob/main/BUILDING.md",Met,The ZAP core team and other community contributors build ZAP and related components on various platforms regularly using FLOSS tools.,Met,https://github.com/zaproxy/zaproxy/wiki/Testing,Met,The existing unit tests use JUnit,Unmet,No evidence found that most of the code is covered by current tests.,Met,This is documented in https://github.com/zaproxy/zaproxy/wiki/DevGuidelines,Met,"We run ZAP against test applications like wavsep and wivet regularly: http://zapbot.github.io/zap-mgmt-scripts/scans.html
The team continues to improve test coverage.",Met,"Included in https://github.com/zaproxy/zaproxy/wiki/DevGuidelines : ""Where possible all developments should include regression tests. There are not enough at the moment, and we need to change that.""",Met,The -Xlint flag is enabled from this PR: https://github.com/zaproxy/zaproxy/pull/2459#issuecomment-218164726,Met,All -Xlint warning fixed from https://github.com/zaproxy/zaproxy/pull/2459#issuecomment-218164726 and build fails if new warnings occur,Met,The -Xlint and -Werror options ensures the build task fails if any warnings occur,Met,"The tool itself is focused on finding vulnerabilities. The project leader is Simon Bennetts (a.k.a. Psiinon), who has held various positions pertaining to development of secure software and systems (https://www.linkedin.com/in/psiinon/).",Met,"The project leader is Simon Bennetts (a.k.a. Psiinon).  He is joint project lead of the ""OWASP Vulnerable Web Applications Directory Project"", project lead of the ""Bodge It Store"" (an intentionally vulnerable web application used for testing), and joint author of the ""OWASP Web Application Security Testing Cheat Sheet"" per https://wiki.owasp.org/index.php/User:Psiinon",,,,,,,,,,,,,,,Met,ZAP generates a per user root CA cert using standard libraries (Bouncy Castle).,Met,"Executables downloaded using HTTPS, see: https://www.zaproxy.org/download/",Met,,Met,We do not know of any unpatched vulnerabilities.,Met,We do not know of any unpatched vulnerabilities.,Met,We use SonarCloud to analyze ZAP's source code weekly. As well as recommending that Developers use Sonar Lint within their IDE.,Met,https://sonarcloud.io/organizations/zaproxy/projects,Met,We do not think that any of the issues reported are exploitable.,Unmet,We are now performing static source code analysis weekly,Unmet,"ZAP is itself a dynamic analysis tool, and can even be invoked by other tools, e.g., using Jenkins per https://wiki.jenkins-ci.org/display/JENKINS/ZAProxy+Plugin - but there's no evidence found that there's another dynamic tool applied against it.",,"ZAP is written in Java, so this is N/A.",Unmet,,Met,No publicly known vulnerabilities.,,2015-10-26 14:45:46 UTC,2021-12-31 21:33:50 UTC,,,Met,GitHub actions are used to build and run unit tests on all commits and PR's. The build status is included as a badge on https://github.com/zaproxy/zaproxy#-owasp-zap,,Met,GitHub issue tracker and pull requests support discussion,Met,,Met,,?,,Met,"Where applicable the user is able to select their desired support for TLS protocol version etc. (As of the current update this means support for TLS 1.3, and whatever hashing algorithms are supported by the JRE in use.)",Met,"ZAP needs to connect to any website it needs to test, so it supports TLS 1, 1.1, 1.2, and 1.3.",Met,"As ZAP is a MitM there are circumstances where this is true and where it is false, however the documentation should make said situations clear.",Met,"As ZAP is a MitM there are circumstances where this is true and where it is false, however the documentation should make said situations clear.",Unmet,// One or more of the required security hardening headers is missing.,Met,"The Windows version comes with a standard installer and uninstaller, the OSX version is packages as an OSX app and the linux / cross platform versions are just tar / zip",?,,100,2016-08-10 07:03:00 UTC,,,False,"Java, JavaScript, PHP",21,67,Met,All ZAP PRs require that a DCO check be passed. https://github.com/zaproxy/zaproxy/pulls,?,,Met,https://github.com/zaproxy/zaproxy/blob/develop/CODE_OF_CONDUCT.md,?,,Met,"2 individuals, (github usernames) psiinon and thc202 have admin access to all sites and services used for the ZAP project.
https://www.zaproxy.org/docs/desktop/credits/#zap-core-team-current",Met,https://www.zaproxy.org/docs/desktop/credits/#zap-core-team-current,?,,?,,?,,Met,"https://www.zaproxy.org/getting-started/
https://www.zaproxy.org/pdf/ZAPGettingStartedGuide-2.11.pdf",Met,"Help is updated in applicable PRs, hosted online, and in some cases automatically generated.
https://www.zaproxy.org/docs/",Met,https://github.com/zaproxy/zaproxy#-owasp-zap,?,,Met,"The whole ZAP code base is internationalized, with translations provided via https://crowdin.com/project/owasp-zap and https://crowdin.com/project/owasp-zap-help",,None of our sites provide an option for user authentication,,The N-1 version of the product is supported but users are strongly encouraged to stay on the Nth version as we are a very small team. Upgrade instructions shouldn't be necessary but are provided in our documentation.,Met,"Where agreed with the reporter vulnerabilities identification/resolution is attributed. Per blog posts, release notes, and our BugCrowd use.
https://www.zaproxy.org",Met,Documentent on https://github.com/zaproxy/zaproxy#-owasp-zap with a link to the ZAP bug bounty program https://bugcrowd.com/owaspzap,Met,"A style is preferred and enforced.facilitated by the build processes/tooling.
https://www.zaproxy.org/docs/developer/",Met,"A style is preferred and enforced.facilitated by the build processes/tooling.
https://www.zaproxy.org/docs/developer/",?,,?,,?,,Met,https://github.com/zaproxy/zaproxy,?,,Met,"The software is easily installable, both with the normal binary installer and packages that can be unzipped. Additionally it is easy to setup a build environment and run the software from source.",Met,"External dependencies are listed and maintained as part of the Gradle build (including tasks/plugins for identification of out-dated dependencies).
https://github.com/zaproxy/zaproxy
(Additionally the team is considering production of a SBOM for ZAP.)",Met,"The team does periodically check whether external dependencies require upgrade for security or any reason.
https://github.com/zaproxy/zaproxy/pulls
https://github.com/zaproxy/zap-extensions/pulls",Met,"External dependencies are listed and maintained as part of the Gradle build (including tasks/plugins for identification of out-dated dependencies).
The team does periodically check whether external dependencies require upgrade for security or any reason.
https://github.com/zaproxy/zaproxy/pulls
https://github.com/zaproxy/zap-extensions/pulls",Met,As outlined above the project team does make significant efforts to ensure dependencies and functionality are kept up-to-date.,Met,"Tests are run as part of our CI builds (both for commits and PRs).
https://github.com/zaproxy/zaproxy",?,,?,,Met,https://github.com/zaproxy/zaproxy/wiki/DevGuidelines,?,,?,,Met,Where applicable the user is able to select their desired support for TLS protocol version etc.,Met,"Where applicable the end user can choose to use whatever type of credential they may need. However, ZAP itself does not require the use of any specific credential etc.",?,,?,,22,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,167,,,,,,2016-08-10 07:03:00 UTC,,,Met,
2,26,27,TrouSerS,A software stack that provides a programmatic API to the computer's Trusted Platform Module (TPM) as specified by the Trusted Computing Group (TCG).,http://trousers.sourceforge.net,http://trousers.sourceforge.net,CPL-1.0,?,,Unmet,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,?,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Unmet,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,Coverity,Met,,Met,,Unmet,once per release,Met,,Met,,Met,,Met,,,2015-10-29 21:13:39 UTC,2015-10-29 21:13:39 UTC,Met,,Unmet,,,?,,Met,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,85,,,2022-04-07 23:00:22 UTC,False,,26,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,85,,,,,,,,,Met,
3,29,24,Node.js,Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine,https://nodejs.org,https://github.com/nodejs/node,MIT,?,,Met,,Met,,Met,https://nodejs.org/en/get-involved/,Met,https://github.com/nodejs/node/blob/master/CONTRIBUTING.md,Met,https://github.com/nodejs/node/blob/master/CONTRIBUTING.md,Met,https://github.com/nodejs/node/blob/master/LICENSE,Met,,Met,,Met,https://nodejs.org/en/docs/,Met,https://nodejs.org/api/,Met,,Met,,Met,,Met,,Met,strictly semver,Met,,Met,git tags,Met,https://github.com/nodejs/node/blob/master/CHANGELOG.md,Met,,?,,Met,https://github.com/nodejs/node/issues,Met,https://github.com/nodejs/node/issues,Met,,Met,,Met,https://github.com/nodejs/node/issues,Met,https://nodejs.org/en/security/,Met,https://nodejs.org/en/security/#disclosure-policy,Met,"""Your email will be acknowledged within 24 hours""",Met,https://github.com/nodejs/node#build,Met,"python, make or batch file, gcc or clang",Met,"python, make or batch file, gcc or clang",Met,,Met,"make or batch file, executed using python",Met,,Met,https://github.com/nodejs/node/blob/master/CONTRIBUTING.md#step-5-test,Met,,Met,,Met,"-Wall for compiling, c++ and JS linting as part of test suite",Met,,Met,,Met,,Met,,Met,all crypto uses openssl,Met,all crypto uses openssl,Met,,Met,,Met,,Met,,,,Met,,Met,,Met,https://github.com/nodejs/node#verifying-binaries,Met,,Met,,Met,https://scan.coverity.com/projects/node-js,Met,,Met,,Unmet,,Unmet,Infrastructure for running several different dynamic analysis tools is provided by the project. See: https://github.com/nodejs/node/tree/master/tools,Met,valgrind for c++,Met,,Met,,,2015-11-02 10:16:28 UTC,2016-05-19 15:28:53 UTC,Met,,Met,https://ci.nodejs.org/,,Met,GitHub issue tracker and pull requests support discussion,Met,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,100,2016-02-12 01:57:00 UTC,,,False,"JavaScript, C++, Python (CII estimate)",3,7,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,107,,,,,,2016-02-12 01:57:00 UTC,,,Met,
4,31,29,OSSEC,"OSSEC is an Open Source Host-based Intrusion Detection System that performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response.  It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. ",http://ossec.github.io,https://github.com/ossec/ossec-hids,GPL-2.0,?,,Met,https://ossec.github.io supports TLS v1.2,Met,https://ossec.github.io/about.html,Met,https://ossec.github.io/about.html#community-support,Met,"Yes, the OSSEC project accepts pull requests. Further information is available here https://ossec.github.io/about.html#community-support and https://github.com/ossec/ossec-hids",Met,http://ossec.github.io/docs/development/oRFC/index.html ,Met,https://github.com/ossec/ossec-hids/blob/master/LICENSE,Met,https://ossec.github.io/about.html#ossec-is-free and in the root directory of the archive/github as LICENSE (https://github.com/ossec/ossec-hids/blob/master/LICENSE),Met,,Met,"https://ossec.github.io/docs/

additionally the Documentation is covered under SCM at: https://github.com/ossec/ossec-docs",Met,"Provides plenty of documentation on how to install, implement, and provides code based examples:
http://ossec.github.io/docs/examples/output/index.html",Met,"Yes, the project is hosted on a publically accessible github: https://github.com/ossec/ossec-hids/",Met,Changes are tracked in github at: https://github.com/ossec/ossec-hids/ and https://github.com/ossec/ossec-hids/commits/master,Met,"Yes the project is branched per release (ex: https://github.com/ossec/ossec-hids/commits/v2.8.3), as well as future milestone release(s) ex: (https://gthub.com/ossec/ossec-hids/commits/2_9_b) as well as a common master branch: https://github.com/ossec/ossec-hids/commits/master",Met,"The project uses git, https://github.com/ossec/ossec-hids/",Met,"Yes, the project uses SemVer format. Example: https://github.com/ossec/ossec-hids/releases",Met,,Met,"Git tags are used for each release, and proposed release: Ex: https://github.com/ossec/ossec-hids/commits/v2.8.3, other tags are used for integration with external parties like Coverity, etc",Met,"The central changelog is maintained at: https://ossec.github.io/docs/whatsnew/index.html, additionally each release includes a changelog, example: https://github.com/ossec/ossec-hids/releases/tag/2.8.2",Met,"Yes, example: https://github.com/ossec/ossec-hids/releases/tag/2.8.2 (resolving CVE-2015-3222)",?,,Met,Bugs are tracked as individual issues at: https://github.com/ossec/ossec-hids/issues ,Met,"Yes, a public bug tracker is available at: https://github.com/ossec/ossec-hids/issues ",Met,"Bugs are accepted or rejected at: https://github.com/ossec/ossec-hids/issues, Core team members are notified of a bug report immediately. Standard response for accept/reject is within 24 hours",Met,"Feature requests/Enhancements are tracked at https://github.com/ossec/ossec-hids/issues, Core team members are notified immediately. Standard response for accept/reject is within 24 hours",Met,Public access to the Issue tracker is available at https://github.com/ossec/ossec-hids/issues,Met,"Same as the bug reporting process, can be done through GitHub, but documentation also specifies that security issues can be sent through to an email:
https://github.com/ossec/ossec-hids/blob/master/BUGS",Met,"Private security reports can also be sent via email in the same way:
https://github.com/ossec/ossec-hids/blob/master/BUGS",Met,"Met, our response time for the last CVE submitted (CVE-2015-3222) was resolved within 24 hours. ",Met,"https://ossec.github.io/docs/manual/installation/index.html and
https://ossec.github.io/docs/development/build/index.html",Met,https://ossec.github.io/docs/development/build/index.html,Met,"https://ossec.github.io/docs/development/build/index.html

OSSEC uses gcc, gnu make, cmake, and other open source tools to build.",Met,"Our rule test suite: https://ossec.github.io/docs/development/build/test-rules.html

Automated build bot repository (for integration with services like travisci, etc):

https://github.com/ossec/ossec-buildbot

Vagrant test suite:

https://github.com/ossec/ossec-vagrant",Met,"Test suite requires python, ossec, and the build tools to compile ossec:
https://ossec.github.io/docs/development/build/test-rules.html#requirements",Met,"Each test suite (rules, buildbot, vagrant) covers different build & test suites, from regression testing (in the case of rules) to automatic building via buildbot & travis integration. Any branch can be applied in this context. Automatic testing is integrated in github for the stable and development branches now",Met,"All pull requests are automatically tested at the time they are committed via:
https://travis-ci.org/ossec

",Met,"Automatic build testing history is tracked at:
https://travis-ci.org/ossec/ossec-hids

Failures are automatically reported back into the pull request at github.com",Met,"All testing for commits, new or otherwise, runs through https://travis-ci.org/ossec/ossec-hids. Internal testing for new rule and decoders is maintained at: https://github.com/ossec/ossec-hids/tree/master/contrib/logtesting",Met,"Code is currently built with FORTIFY_SOURCE on distros that support this functionality. Binary packaging also includes -fPIE -pie -Wl,-z,relro",Met,"All warnings have been addressed either as a fixed issue or in the code itself.
https://github.com/ossec/ossec-hids/search?q=warnings&type=Issues&utf8=%E2%9C%93",Met,"Project proves to be strict with warnings such that all warnings raised as an issue have been addressed, fixed, and the issue has been closed.  In instances where warnings are triggered but they are trivial, they are flagged in the code.  But, it is also noted in their repo that there are a number of instances where fixing warnings is too time consuming for little purpose, so they note that they assure the code works despite the warnings.
https://github.com/ossec/ossec-hids/blob/a7ca63d6d074f2f6bdb49f4bc79a054c31dcafc7/src/external/zlib-1.2.8/FAQ",Met,"""This product includes cryptographic software written by Eric Young (eay@cryptsoft.com)""",Met,"""This product includes cryptographic software written by Eric Young (eay@cryptsoft.com)""",Met,OpenSSL,Met,OpenSSL,Met,,,,Unmet,Currently the project relies on MD5 & SHA1 for the File Integrity Monitoring system. The project is currently in the process of updating this to SHA256.,,,,,,,Met,"Commits and release tags are signed before release. These keys are digitally signed by 3rd parties, and are downloaded over HTTPS. ",Met,"We only rely on releases digitally signed with the release maintainers GPG keys. These keys are both signed by 3rd parties, and only available via either known public PGP serves (MIT, bitkey) or via https (ex: https://www.atomicorp.com/RPM-GPG-KEY.atomicorp.txt) ",Met,No unpatched high severity vulnerabilities.,Met,"Most vulnerabilities reported have been addressed and fixed:
https://github.com/ossec/ossec-hids/search?q=vulnerability&type=Issues&utf8=%E2%9C%93",Met,"Uses coverity:
https://scan.coverity.com/projects/ossec-ossec-hids",Met,,Met,Vulnerabilities are addressed and fixed.,Unmet,"Static source code analysis is performed often (last check was 7 days ago), but not daily or on every commit.  ",Unmet,The project currently uses Coverity scans at: https://scan.coverity.com/projects/1847,Unmet,"We currently test the software with Coverity on an scheduled basis, and spot check the software with valgrind. However we do not feel that this is good enough to warrant a ""Met"" categorization. We intend to build static analysis in at the commit level. ",Unmet,This is currently planned for the next round of improvements in our travis-ci integration,Met,,,2015-11-05 17:49:54 UTC,2016-08-21 20:38:19 UTC,Unmet,SHA-1 and MD5 are used,Met,"Automatic build testing is integrated with github & travis at:
https://travis-ci.org/ossec",cpe:/a:ossec,Met,GitHub issue tracker and pull requests support discussion,Met,,Met,"Bug reports are accepted at: https://github.com/ossec/ossec-hids/issues, it is accepted in English and supports comment threading.

English Documentation is provided at: https://ossec.github.io/docs/ 

additionally the Documentation is covered under SCM at: https://github.com/ossec/ossec-docs",Met,"All official binary packages are built with hardening flags (FORTIFY, etc), relro, and PIE settings. Source builds include references to these flags as well (compilerpermitting)",Unmet,"As this project by its nature is designed to act as a syslog server replacement, as the server component we are at the mercy of whatever the client submitting traffic uses. However the core OSSEC project uses only encrypted protocols between OSSEC agent and server installations. ",,,,,,,Met,"The project source code is stored on github, further, release tags and archives are digitally signed with the release maintainer GPG keys.",Met,"This is currently implemented in our binary RPM and DEB packaging. These packages can be removed through standard OS tools. Source installations are self contained to the /var/ossec directory, and can be removed easily by removing this directory. However for configuration management we always recommend using our distributed binary packages.",Met,Reproducible building is available  our published RPM and DEB spec files. These are included in our git repository,99,,,2022-03-11 23:00:36 UTC,False,"C, Shell, Perl (CII estimate)",29,18,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,22,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,99,,,,,,,,,Met,
5,33,23,Ruby on Rails,Ruby on Rails is an open-source web framework that’s optimized for programmer happiness and sustainable productivity. It favors convention over configuration.,http://rubyonrails.org,https://github.com/rails/rails,MIT,?,,Unmet,// Given an http: URL.,Met,http://rubyonrails.org/,Met,http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html,Met,http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html,Met,http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#write-your-code,Met,https://github.com/rails/rails/blob/master/activerecord/MIT-LICENSE and the same in other sub-projects.,Met,https://github.com/rails/rails#license The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,http://guides.rubyonrails.org/,Met,http://api.rubyonrails.org/,Met,https://github.com/rails/rails,Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,https://github.com/rails/rails/releases,Met,http://weblog.rubyonrails.org/releases/,Met,,?,,Met,,Met,https://github.com/rails/rails/issues,Met,,Met,,Met,https://github.com/rails/rails/issues,Met,http://rubyonrails.org/security/,Met,http://rubyonrails.org/security/,Met,,Met,https://github.com/rails/rails/blob/master/RELEASING_RAILS.md,Met,,Met,,Met,http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#running-tests,Met,http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#running-tests,Met,,Met,http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#write-your-code,Met,,Met,http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#write-your-code,Met,"As explained in the [Contributing to Ruby on Rails (warning section)](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#warnings): ""The test suite runs with warnings enabled. Ideally, Ruby on Rails should issue no warnings, but there may be a few, as well as some from third-party libraries. Please ignore (or fix!) them, if any, and submit patches that do not issue new warnings. If you are sure about what you are doing and would like to have a more clear output, there's a way to override the flag:
$ RUBYOPT=-W0 bundle exec rake test"".  In short, Rails *does* run with Ruby compiler warnings, and patches are to be submitted in a way that ""do not issue new warnings"".",Met,See [Contributing to Ruby on Rails (warning section)](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#warnings).,Unmet,,Met,,Met,,Met,,Met,,Met,,,,Met,http://api.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html,,,,,Met,,Met,https://rubygems.org/gems/rails/,Met,,Met,,Met,,?,,Unmet,,?,,Unmet,,Unmet,,,,Unmet,,Unmet,,,2015-11-05 21:12:14 UTC,2020-10-15 21:53:50 UTC,Met,,Met,https://travis-ci.org/rails/rails,cpe:/a:rubyonrails,Met,GitHub issue tracker and pull requests support discussion,Met,,Met,,?,,?,,?,,?,,?,,Unmet,"// X-Content-Type-Options was not set to ""nosniff"".",?,,?,,94,,,2022-04-29 23:00:22 UTC,False,"Ruby, JavaScript, CoffeeScript (CII estimate)",29,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,13,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,94,,,,,,,,,Met,
6,34,30,Linux Kernel,The Linux kernel.,https://www.kernel.org,https://git.kernel.org,GPL-2.0,?,,Met,,Met,https://www.kernel.org/linux.html,Met,https://bugzilla.kernel.org/,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/HOWTO,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/SubmittingPatches,Met,"The license (GPL-2.0) is in the file COPYING, see <https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/COPYING>.",Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/COPYING The GPL-2.0 license is approved by the Open Source Initiative (OSI).,Met,The GPL-2.0 license is approved by the Open Source Initiative (OSI).,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/ABI/,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git,Met,https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git,Met,,Unmet,"The Linux kernel does not make API changes that affect userspace, so there is no need to have denote api compatibility, it is always stable.",Met,,Met,http://kernelnewbies.org/LinuxChanges,Met,,?,,Met,https://bugzilla.kernel.org,Met,See https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/REPORTING-BUGS,Met,,Unmet,"It is up to contributors to submit enhancement requests, the Linux kernel developers almost never accept ""enhancement requests"" on their own.",Met,"Reports and responses are handled as described in <https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/REPORTING-BUGS>.  Many reports on subsystems are handled via subsystem mailing lists, see <http://vger.kernel.org/vger-lists.html>.  Archives of the overall linux-kernel mailing list are available via <http://vger.kernel.org/vger-lists.html#linux-kernel>. The kernel bug tracker is also used (and is searchable); it is accessible at <https://bugzilla.kernel.org/>.",Met,The vulnerability reporting process is described in https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/REPORTING-BUGS and https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/SecurityBugs,Met,See https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/SecurityBugs,Met,,Met,,Met,,Met,,Met,An example is the Linux Test Project http://linux-test-project.github.io/,Met,https://www.kernel.org/doc/html/latest/process/development-process.html describes how 'make tests' works.,Unmet,"Kernel tests test individual feature functionality, not code branches, and is generally for only ""new"" features, not older POSIX-like functionality.",Met,,Met,,Met,"Not all new features are able to have automated tests added for them.  But, for new syscalls, we do strongly recommend that new tests be added to the automated test suite to show that testing has happened, and to allow for regressions to be found over time.",Met,"The kernel build process enables a lot of warning flags, and it also provides the tool 'sparse' to check for many other coding problems.  And a full test suite of coccineele scripts is integrated into the kernel source tree itself.",Met,,Met,"Where ever practical, all warnings are fixed.",Met,,Met,,Met,,,,Met,,Met,,Met,,,,,,Met,,Met,,Met,,Met,,Met,,Met,Coverity and sparse and smatch and many other static code analysis tools are run on the kernel all the time.,Met,We use coverity and sparse and smatch and others for this.,Met,,Met,,Met,https://01.org/lkp/documentation/0-day-test-service runs lots of these tools on all trees before release.,Met,We use coverity and sparse and smatch and others for this,Met,"Look at all of the wonderful BUG_ON() calls in the kernel (hint, you really don't want those to ever trigger, but they are there...)",Met,,,2015-11-10 02:54:22 UTC,2020-06-10 07:14:42 UTC,Met,https://www.kernel.org/doc/html/latest/crypto/architecture.html,Met,"https://01.org/lkp/documentation/0-day-test-service
The 0-day bot does testing of every commit before it is merged into the main repository.",cpe:/o:linux:linux_kernel,Met,,Met,,Met,,Met,"The Linux kernel self protection project develops hardening improvements for the Linux kernel; many of them have already been accepted into the Linux kernel mainline: http://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project
There are a number of hardening mechanisms in the Linux kernel, such as Linux kernel stack protection.
",,"The kernel implements network packets in general; applications running on top request or perform network communication.  The kernel does implement IPSEC, which is used if requested.  Otherwise, the user specifically requests or configures whatever network protocol is used.",Met,The kernel properly implements TLS if you are so crazy as to wish to use it from within kernelspace.,Met,The kernel properly implements TLS if you are so crazy as to wish to use it from within kernelspace.,Met,The kernel properly implements TLS if you are so crazy as to wish to use it from within kernelspace.,Met,https://kernel.org // One or more of the required security hardening headers is missing.,Met,"Many third parties provide packages (e.g., .deb for apt-get, .rpm).  It's also provided as an xz-compressed tarball.  Since this is a kernel, installation is in general different than application software.",Met,https://www.kernel.org/doc/html/latest/,100,2018-06-14 16:10:57 UTC,2018-06-14 15:39:52 UTC,,False,,31,100,Met,"https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin
We created the DCO for the kernel project :)",Met,"https://www.kernel.org/doc/html/latest/process/development-process.html
",Met,https://www.kernel.org/doc/html/latest/process/code-of-conflict.html,Met,"https://www.kernel.org/doc/html/latest/process/development-process.html
",Met,"https://www.kernel.org/doc/html/latest/process/development-process.html
",Met,"https://www.kernel.org/doc/html/latest/process/development-process.html
",Met,"There is never a roadmap for the kernel, this type of thing is crazy for a project to try to determine.
If you want to see what is coming, look at https://git.kernel.org/
",Met,"https://www.kernel.org/doc/html/latest/process/development-process.html
",Met,https://www.kernel.org/doc/html/latest/admin-guide/security-bugs.html,,"A kernel is not a ""quick start"" type of thing.  That being said, https://kernelnewbies.org does provide a lot of documentation for people getting involved in development.",Met,https://www.kernel.org/doc/html/latest/,Met,https://www.kernel.org,Met,https://www.kernel.org/,,A kernel does not need to have any locale at all.,,No passwords are stored.,Met,https://www.kernel.org/,Met,"https://www.kernel.org/ has full changelog history of all commits, see the ""Reported-by:"" tags for full attributions.",Met,https://www.kernel.org/doc/html/latest/admin-guide/security-bugs.html,Met,https://www.kernel.org/doc/html/latest/process/coding-style.html,Met,scripts/checkpatch.pl checks and enforces coding style rules.,Met,All build environment variables are properly handled.,Met,Configuration options allow for all debugging symbols to be retained in the built objects.,Met,No recursion in the build system when there are cross-dependencies in the subdirectories.,Met,The kernel meets the reproducible build requirements.,Met,The kernel install process is standard on all distros as there is a distro-specific include script which always will work properly.,Met,All distros usually have a 'kernel-developer' meta-package option to automatically install needed dependancies to build the project.,,The kernel has no external dependencies.,,The kernel has no external dependencies.,,The kernel has no external dependencies.,,The kernel has no external dependencies.,Met,The 0-day bot runs on each commit in almost all maintainers trees before they are merged into Linus's tree.,,"It is impossible to create automated regression tests for even a small percentage of the bugs found in the kernel.  But, people are actively working on this, and we do have a very large test suite that includes checks for almost all major CVEs that can be tested for.",,Code coverage is a horrible metric.  See above for the discussion about our automated regression tests.,Met,"Not all kernel functionality can be tested with an automated test suite.  That being said, we do have a huge test suite for almost all major functionality that is run all the time on all maintainer's branches to ensure no regressions happen.",Met,"The kernel implements ""known secure design"" principles.",Met,"""All input is evil"" is the mantra the kernel attempts to follow.  We have automated testing for following userspace data into the kernel and when it is validated properly.",Met,https://www.kernel.org/doc/html/latest/crypto/architecture.html,Met,https://www.kernel.org/doc/html/latest/crypto/architecture.html,Met,https://www.kernel.org/category/signatures.html,Met,All tags for kernel releases are properly signed.,100,Met,https://www.kernel.org/,Met,https://www.kernel.org/doc/html/latest/process/license-rules.html,Met,https://www.kernel.org/doc/html/latest/process/license-rules.html,Met,http://kernelnewbies.org/,Met,https://www.kernel.org/category/signatures.html,Met,https://www.kernel.org/category/signatures.html,Met,https://www.kernel.org/doc/html/latest/process/development-process.html,Met,https://www.kernel.org/doc/html/latest/process/development-process.html,,"There is no such tool that can provide this.

And code coverage is not an indication of code quality :)",,No such tool can provide this.,Met,Lots of people audit the kernel all the time for these types of issues.,Met,"The kernel's security requirements are constantly tested and probed by everyone in the world.  When problems are found, they are resolved as quickly as possible as described in our security bugs reporting documentation: https://www.kernel.org/doc/html/latest/admin-guide/security-bugs.html",Met,,Met,,300,,,,2020-06-10 07:14:42 UTC,,2018-06-14 16:10:57 UTC,,2020-06-10 07:14:42 UTC,Met,
7,35,23,schema_to_scaffold,"Enables ""rails generate scaffold"" to create Rails code that matches an existing database.",https://github.com/frenesim/schema_to_scaffold,https://github.com/frenesim/schema_to_scaffold,MIT,?,,Met,,?,,?,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",?,,Met,Non-trivial license location file in repository: <https://github.com/frenesim/schema_to_scaffold/blob/master/LICENSE.txt>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,Unmet,No appropriate folder found for documentation basics.,?,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Met,Non-trivial release notes file in repository: <https://github.com/frenesim/schema_to_scaffold/blob/master/CHANGELOG.md>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,Non-trivial build file in repository: <https://github.com/frenesim/schema_to_scaffold/blob/master/Rakefile>.,Met,Non-trivial build file in repository: <https://github.com/frenesim/schema_to_scaffold/blob/master/Rakefile>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2015-11-12 21:57:27 UTC,2017-08-23 19:18:34 UTC,?,,?,,,Met,GitHub issue tracker and pull requests support discussion,?,,Met,,?,,?,,?,,?,,?,,Met,Found all required security hardening headers.,?,,?,,21,,,2022-05-18 23:00:24 UTC,False,Ruby (CII estimate),28,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,21,,,,,,,,,Met,
8,40,31,API Client for Lightspeed Restaurant,"Lightspeed Restaurant API Client is a gem for interacting with Lightspeed Restaurant API. Lightspeed Restaurant is point of sale that helps bars, restaurants, and cafés deliver a better customer experience and run a more profitable business.",https://github.com/chronogolf/lightspeed_restaurant,https://github.com/chronogolf/lightspeed_restaurant,MIT,?,,Met,,?,,?,,Unmet,No contribution file found.,?,,Met,Non-trivial license location file in repository: <https://github.com/chronogolf/lightspeed_restaurant/blob/master/LICENSE.txt>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,?,,?,,?,,Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Unmet,No changelog file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,Non-trivial build file in repository: <https://github.com/chronogolf/lightspeed_restaurant/blob/master/Rakefile>.,Met,Non-trivial build file in repository: <https://github.com/chronogolf/lightspeed_restaurant/blob/master/Rakefile>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2015-12-08 15:04:16 UTC,2015-12-08 15:04:16 UTC,?,,?,,,Met,GitHub issue tracker and pull requests support discussion,?,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,16,,,2022-04-08 23:00:19 UTC,False,"Ruby, Shell (CII estimate)",29,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,16,,,,,,,,,Met,
9,41,64,byobu,"Byobu is a GPLv3 open source text-based window manager and terminal multiplexer. It was originally designed to provide elegant enhancements to the otherwise functional, plain, practical GNU Screen, for the Ubuntu server distribution. Byobu now includes an enhanced profiles, convenient keybindings, configuration utilities, and toggle-able system status notifications for both the GNU Screen window manager and the more modern Tmux terminal multiplexer, and works on most Linux, BSD, and Mac distributions.",https://byobu.org,https://launchpad.net/byobu,GPL-3.0,?,,Met,,Met,,Met,"Website contains information on how to obtain the software. Project is hosted on Launchpad, so bug reports and enhancements are per default.",Met,http://byobu.org/source.html,Met,http://byobu.org/source.html,Met,Non-trivial license location file in repository: <https://github.com/dustinkirkland/byobu/blob/master/COPYING>.,Met,The GPL-3.0 license is approved by the Open Source Initiative (OSI).,Met,The GPL-3.0 license is approved by the Open Source Initiative (OSI).,Met,Man page: http://bazaar.launchpad.net/~kirkland/byobu/trunk/download/head:/byobu.1-20090505232055-xg34yvd44d9ips2p-1/byobu.1,Met,Keybindings described in /usr/share/doc/byobu page: http://bazaar.launchpad.net/~kirkland/byobu/trunk/download/head:/help.tmux.txt-20111109180841-6hbcf922823ajk8l-1/help.tmux.txt,Met,,Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Unmet,major.minor has been sufficient for this project so far.,Met,,Met,http://bazaar.launchpad.net/~kirkland/byobu/trunk/view/head:/debian/changelog,Met,,?,,Met,Launchpad bugs,Met,Bug reporting via Launchpad documented on http://byobu.org/support.html,Met,,Met,,Met,https://bugs.launchpad.net/byobu,Met,http://byobu.org/support.html,Met,Private Launchpad bugs. http://byobu.org/support.html,Met,,Met,http://bazaar.launchpad.net/~kirkland/byobu/trunk/view/head:/Makefile.am,Met,autoconf/automake/configure/make driven,Met,,Met,http://bazaar.launchpad.net/~kirkland/byobu/trunk/view/head:/debian/rules,Met,,Unmet,,Met,,Met,http://bazaar.launchpad.net/~kirkland/byobu/trunk/annotate/head:/debian/rules,Unmet,,Met,,Met,,Unmet,,Met,,Met,,,,,,,,,,,,,,,,,,Met,,Met,,Met,,Met,,Met,"pep8 syntax checking, shell syntax checking, bashisms checking",Unmet,,Met,,Unmet,,Unmet,,,,Unmet,,Met,,,2015-12-08 15:40:45 UTC,2018-04-09 01:53:28 UTC,,,Unmet,,,Met,GitHub issue tracker and pull requests support discussion,Met,,Met,,?,,,,,,,,,,Unmet,"// X-Content-Type-Options was not set to ""nosniff"".",?,,Unmet,,100,2018-04-09 01:53:28 UTC,,2018-03-14 23:00:54 UTC,False,"Bash, Python",10,15,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,13,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,115,,,,,,2018-04-09 01:53:28 UTC,,,Met,
10,42,33,GitLab,"GitLab is version control for your server. It also includes an issue tracker, CI/CD and a wiki.",https://about.gitlab.com,https://gitlab.com/gitlab-org/gitlab-ce,MIT,?,,Met,,Met,,Met,,Met,Non-trivial contribution file in repository: <https://github.com/gitlabhq/gitlabhq/blob/master/CONTRIBUTING.md>.,Met,https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md,Met,Non-trivial license location file in repository: <https://github.com/gitlabhq/gitlabhq/blob/master/LICENSE>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,,Met,,Met,,Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,,Met,Non-trivial changelog file in repository: <https://github.com/gitlabhq/gitlabhq/blob/master/CHANGELOG>.,Met,,?,,Met,,Met,https://gitlab.com/gitlab-org/gitlab-ce/issues,Met,,Met,,Met,https://gitlab.com/gitlab-org/gitlab-ce/issues,Met,https://about.gitlab.com/disclosure/,Met,https://about.gitlab.com/disclosure/,Met,https://about.gitlab.com/disclosure/,Met,Non-trivial build file in repository: <https://github.com/gitlabhq/gitlabhq/blob/master/Rakefile>.,Met,Non-trivial build file in repository: <https://github.com/gitlabhq/gitlabhq/blob/master/Rakefile>.,Met,,Met,,Met,,Met,,Met,,Met,,Met,,,,,,, ,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,See the [GitLab handbook](https://about.gitlab.com/handbook/); [here's a discussion on why the handbook is open source](https://about.gitlab.com/2016/07/12/our-handbook-is-open-source-heres-why/).,2015-12-08 22:53:25 UTC,2016-07-17 03:32:22 UTC,Met,,Met,,,Met,,Met,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,99,2016-01-30 22:49:00 UTC,2021-04-11 18:16:17 UTC,2022-04-06 23:00:40 UTC,False,,9,2,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,99,,,,,,2016-01-30 22:49:00 UTC,,,Met,
11,54,75,OpenSSL,"OpenSSL is an open source project that provides a robust, commercial-grade, and full-featured toolkit for the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) protocols. It is also a general-purpose cryptography library.",https://www.openssl.org,https://git.openssl.org/,OpenSSL,?,,Met,,Met,,Met,https://www.openssl.org/community/,Met,https://www.openssl.org/community/,Met,https://www.openssl.org/policies/codingstyle.html,Met,https://github.com/openssl/openssl/blob/master/LICENSE,Met,"OpenSSL uses an unusual license that is known to be FLOSS.  [GNU's ""Various Licenses and Comments about Them""](https://www.gnu.org/licenses/license-list.html) lists this as a ""GPL-Incompatible Free Software License"".  It is listed by [Debian](https://www.debian.org/legal/licenses/) as a ""license found in main"", and [Fedora](https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing) lists it as a ""good"" license.",Unmet,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,https://www.openssl.org/news/changelog.html,Met,,?,,Met,https://rt.openssl.org/,Met,https://www.openssl.org/community/#bugs,Met,,Met,,Met,https://rt.openssl.org/,Met,https://www.openssl.org/news/vulnerabilities.html,Met,https://www.openssl.org/news/vulnerabilities.html,Met,,Met,,Met,,Met,,Met,https://github.com/openssl/openssl/tree/master/test,Met,,Met,,Met,https://wiki.openssl.org/index.php/Unit_Testing,Met,Example commit of tests being added: https://git.openssl.org/?p=openssl.git;a=commitdiff;h=5dc312215fa54b70cc8b4baec933bcc19525bc03,Unmet,,Met,,Met,,Unmet,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,https://scan.coverity.com/projects/294,Met,,Met,,Met,,Met,https://wiki.openssl.org/index.php/Static_and_Dynamic_Analysis,Met,,Unmet,,Met,,"Note that this badge entry is for the current OpenSSL project.  There is a separate *different* entry for the historical information on [OpenSSL before Heartbleed](https://bestpractices.coreinfrastructure.org/projects/87).
",2016-01-25 20:18:15 UTC,2016-05-19 15:28:54 UTC,Met,,Met,TravisCI: https://mta.openssl.org/pipermail/openssl-dev/2015-October/003251.html,cpe:2.3:a:openssl:openssl:1.0.1:*:*:*:*:*:*:*,Met,OpenSSL uses rt and provides a guest login.,Met,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,100,2016-02-12 22:09:00 UTC,,,False,,2,5,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,9,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,105,,,,,,2016-02-12 22:09:00 UTC,,,Met,
12,63,50,curl,curl is a command line tool and library for internet transfers,https://curl.se,https://github.com/curl/curl,MIT,?,,Met,,Met,,Met,,Met,https://github.com/curl/curl/blob/master/docs/CONTRIBUTE.md,Met,https://curl.haxx.se/dev/contribute.html,Met,Non-trivial license location file in repository: <https://github.com/curl/curl/blob/master/COPYING>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The license is MIT/X The MIT license is approved by the Open Source Initiative (OSI).,Met,,Met,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,"We don't do ""interim versions"", but we provide daily snapshots.",Met,"Repository on GitHub, which uses git. git is distributed.",Met,https://curl.haxx.se/docs/versions.html,Met,,Met,We tag each release with the release version.,Met,https://curl.haxx.se/changes.html,Met,,?,,Met,https://github.com/curl/curl/issues,Met,https://github.com/curl/curl/issues,Met,,Met,,Met,https://github.com/curl/curl/issues,Met,https://curl.haxx.se/dev/security.html,Met,https://curl.haxx.se/dev/security.html explains this,Met,We have a proven track record.,Met,Non-trivial build file in repository: <https://github.com/curl/curl/blob/master/CMakeLists.txt>.,Met,Non-trivial build file in repository: <https://github.com/curl/curl/blob/master/CMakeLists.txt>.,Met,,Met,,Met,make check and make test work http://github.com/curl/curl,Met,,Met,,Met,,Met,This is mentioned,Met,,Met,,Met,Amen.,Met,,Met,,Met,,Met,"We do this, as long as the user doesn't build the library without properly provided libraries that provide those functions.",Met,,Met,,Met,"We do this, as long as the user doesn't use protocols that REQUIRE the use of such algorithms.",Met,"We do this, as long as the user use protocols that support such algorithms.",,,Met,,Met,,Met,,Met,,Met,,Met,"We run scan-build (Clang's static analyzer) daily, and Coverity weekly.",Met,We run coverity regularly. We run lgtm.com on each push/PR. We run scan-build regularly.,Met,,Met,,Met,"We use numerous, in CI and manual regular invokes",Met,We're part of OSS-Fuzz that fuzz curl non-stop. We run a basic fuzzing round on the code for every push/PR.,Met,See code,Met,,,2016-02-15 18:53:27 UTC,2021-07-02 14:48:32 UTC,Met,"We do this, as long as the user doesn't use protocols that REQUIRE the use of such algorithms.",Met,We have 80+ CI jobs for every commit and PR. http://github.com/curl/curl,,Met,GitHub supports discussions on issues and pull requests.,Met,,Met,,Met,"We build and run an extensive number of tests using fuzzers and sanitizer flags enabled builds non-stop. http://github,com/curl/curl",,"curl and libcurl are tools for using all sort of protocols, including the ""insecure"" ones. It would make little sense to disable those by default for all users. We however allow any user to explicitly disable whatever protocol they like.",Met,curl supports all TLS versions,Met,https://curl.haxx.se/docs/sslcerts.html,Met,https://curl.haxx.se/docs/sslcerts.html,Met,We use github and https://curl.haxx.se set hardening headers.,Met,"""make install"" ... ""make uninstall""",Met,"we have no timestamps or ""moving parts"" http://github,com/curl/curl",100,2016-03-24 20:14:00 UTC,,,False,C,40,100,Unmet,We don't believe in the necessity this requirement and won't meet it. We will never be silver level because if this.,Met,https://curl.haxx.se/docs/governance.html,Met,https://curl.haxx.se/docs/code-of-conduct.html,Met,https://curl.haxx.se/docs/governance.html,Met,https://curl.haxx.se/docs/governance.html - there is no secret or similar owned by any single individual that risks hurting the project for many days,Met,https://daniel.haxx.se/blog/2017/08/02/the-curl-bus-factor/ - We're having everything extensively documented and tested. There are no secrets. Tools generally evaluate us at around factor 2.,Met,https://curl.haxx.se/dev/roadmap.html,Met,https://curl.haxx.se/dev/internals.html,Met,https://curl.haxx.se/libcurl/security.html,Met,for libcurl: https://curl.haxx.se/libcurl/c/libcurl-tutorial.html,Met,"We make sure docs is fine to some extent with documentation tests, and the rest is manual review.",Met,https://curl.haxx.se/,Met,The web site and documentation are straight-forward text-based and don't require fancy UI things. Also using high contrast colors and avoids using images for explanations etc.,,This software does not produce text intended for mere humans.,,This project never stores anyone's passwords.,Met,curl remains backwards compatible at all times so upgrading to the latest should always be possible without breaking functionality!,Met,https://curl.haxx.se/docs/security.html,Met,https://curl.haxx.se/dev/secprocess.html,Met,https://curl.haxx.se/dev/code-style.html,Met,'make checksrc' runs the check (also performed by CI),,The project doesn't host native binaries.,Met,Debug symbols are preserved if enabled.,Met,there are no cross-dependencies in the subdirectories,Met,the curl build procedure is fully reproducible!,Met,provides autoconf and cmake build systems that both adhere to this,Met,"sure, build a debug version and install, no problemos",,This project doesn't have any mandatory external dependencies,,No mandatory external dependencies,Met,curl -V shows all third party components that are used,Met,curl supports the latest and greatest where such things are available,Met,"travis CI, appveyor and more are used to run 40+ test builds and test runs for each push",Met,This is normal procedure.,Met,"Due to the multi-platform nature of curl, this is very hard to reach. We're at 75% MEASURE coverage, but as shown in travis and elsewhere we do a lot more tests than what the coverage test run includes. Most likely we cover more than 5% extra. See https://coveralls.io/github/curl/curl",Met,This is what we do,Met,We have a strong focus on security and make an effort to development everything with security in mind.,,The idea behind these tools is to get input from external source and use to offer a functionality. They can normally not be white nor blacklisted. It's data we use.,Met,"curl supports TLS and SSH crypto, both of which allow for many different cryptographic algorithms to get negotiated",Met,curl and libcurl don't assume anything about where such info is stored,Met,Using GPG,Met,https://github.com/curl/curl,100,Met,See commit history analysis https://curl.haxx.se/gitstats/authors.html and on github,Met,"see source, also verified by tests",Met,see source,Met,https://github.com/curl/curl/blob/master/docs/HELP-US.md#smaller-tasks,Met,2fa required on github,Met,what is there to add?,Met,https://curl.haxx.se/dev/code-review.html,Met,see commits,Met,"90% coverage of the relevant code can be achieved, but code coverage is hard to measure in the project and is a rather pointless way to measure test quality.",Met,"http://github,com/curl/curl",Met,We had one done in 2016: https://daniel.haxx.se/blog/2016/11/23/curl-security-audit/,Met,We detail all things security aspects for users of libcurl here: https://curl.haxx.se/libcurl/security.html we document our security process for the project here_ https://curl.haxx.se/dev/secprocess.html,Met,,Met,,300,,2020-06-10 21:07:11 UTC,,2020-06-13 20:35:54 UTC,,2016-03-24 20:14:00 UTC,2020-06-10 21:07:11 UTC,2020-06-13 20:35:54 UTC,Met,
13,64,51,checker,"Checker is a monitoring service that is designed to alert you when things are going wrong with the various things you care about. It has sample jobs that can ping TCP ports and HTTP servers, and you can run any job you care about by writing a python class.",https://github.com/tomrittervg/checker,https://github.com/tomrittervg/checker,,?,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-02-15 20:26:26 UTC,2016-05-19 15:28:54 UTC,?,,?,,,?,,?,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,4,,,2022-05-03 23:00:21 UTC,False,Python (CII estimate),28,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,4,,,,,,,,,Met,
14,65,52,HTTP/2 State-Machine based protocol implementation,,http://python-hyper.org/h2,https://github.com/python-hyper/hyper-h2,MIT,?,,Unmet,,?,,?,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",?,,Met,Non-trivial license location file in repository: <https://github.com/python-hyper/hyper-h2/blob/master/LICENSE>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,?,,?,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Unmet,No release notes file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,Non-trivial build file in repository: <https://github.com/python-hyper/hyper-h2/blob/master/Makefile>.,Met,Non-trivial build file in repository: <https://github.com/python-hyper/hyper-h2/blob/master/Makefile>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-02-15 22:47:53 UTC,2016-05-19 15:28:54 UTC,?,,?,,,Met,GitHub supports discussions on issues and pull requests.,?,,Met,,?,,?,,?,,?,,?,,?,,?,,?,,18,,,2022-05-03 23:00:21 UTC,False,"Python, Shell, Makefile (CII estimate)",30,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,18,,,,,,,,,Met,
15,66,53,BRL-CAD,"BRL-CAD is an open source solid modeling system with interactive 3D geometry editing, high-performance ray tracing for rendering, hybrid representation geometry conversion, and processing for geometric analysis.",http://brlcad.org,https://svn.code.sf.net/p/brlcad/code/brlcad/trunk,LGPL-2.1,?,,Met,"https://brlcad.org
https://svn.code.sf.net/p/brlcad/code/brlcad/trunk
https://sourceforge.net/projects/brlcad/files/
https://github.com/BRL-CAD
",Met,http://brlcad.org,Met,http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/HACKING,Met,http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/HACKING,Met,http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/HACKING,Met,"http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/COPYING
http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/doc/legal/",Met,http://svn.code.sf.net/p/brlcad/code/brlcad/trunk/COPYING,Met,,Met,http://brlcad.org/wiki/Documentation,Met,http://brlcad.org/w/images/c/cf/Introduction_to_MGED.pdf,Met,"Primary source code resides on SourceForge at https://svn.code.sf.net/p/brlcad/code/brlcad with additional repositories on GitHub at https://github.com/BRL-CAD for infrastructure and model management.
",Met,https://sourceforge.net/p/brlcad/code/commit_browser,Met,All development activity occurs in public source repositories at https://svn.code.sf.net/p/brlcad/code/brlcad and https://github.com/BRL-CAD,Met,"BRL-CAD uses both centralized and decentralized development, intentionally using centralized (SVN on Sourceforge) for primary development where we have strict validation and verification (V&V) requirements and a desire for enforced developer interaction inherent with the centralized model.  We used decentralized (GIT on GitHub) for all our other work including website infrastructure, model management, and experimental projects.",Met,"https://svn.code.sf.net/p/brlcad/code/brlcad/tags/
https://sourceforge.net/projects/brlcad/files/BRL-CAD%20Source/
",Met,,Met,,Met,"https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/NEWS
",Met,https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/ChangeLog,?,,Met,https://sourceforge.net/p/brlcad/support-requests/,Met,https://sourceforge.net/p/brlcad/bugs/,Met,"Majority of bugs have been addressed with discussion, deferral, or fixes:
https://sourceforge.net/p/brlcad/bugs/",Met,"Majority of enhancement requests have been addressed with discussion, rejection, or implementation:
https://sourceforge.net/p/brlcad/feature-requests/",Met,"https://sourceforge.net/p/brlcad/mailman/brlcad-tracker/
https://sourceforge.net/p/brlcad/bugs/
https://sourceforge.net/p/brlcad/support-requests/
https://sourceforge.net/p/brlcad/feature-requests/
",Met,"https://sourceforge.net/p/brlcad/patches/
https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/README
",,"Private vulnerability reports are NOT supported.  All reporting should be in the open, but private reporting is available via http://brlcad.org/d/contact and e-mail via https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/README",Met,Most reports have been reviewed.,Met,https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/CMakeLists.txt,Met,CMake,Met,CMake + GNU Make + LLVM / GCC,Met,"Unit and System tests (CMake/CTest + C/C++): https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/CTestConfig.cmake
Regression testing (CMake + Shell Scripts): https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/regress
Performance testing (CMake + Tools): https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/bench
",Met,"https://svn.code.sf.net/p/brlcad/code/brlcad/trunk/CTestConfig.cmake
make test
make regress
make benchmark
",Met,"BRL-CAD's testing infrastructure is extensive including low-level unit tests, regression tests, performance tests, and higher-level system integration tests exploring a majority of the most important source code.",Met,"There is an informal policy of unit testing all new core library functionality.  Evidence of test updates available at
https://sourceforge.net/p/brlcad/code/HEAD/tree/brlcad/branches/RELEASE/ChangeLog
",Met,"https://sourceforge.net/p/brlcad/code/HEAD/log/?path=/brlcad/trunk/src/libbu/tests
https://sourceforge.net/p/brlcad/code/HEAD/log/?path=/brlcad/trunk/src/libbn/tests
",Met,"http://en.flossmanuals.net/contributors-guide-to-brl-cad/how-to-contribute/
http://en.flossmanuals.net/contributors-guide-to-brl-cad/code-overview/
",Met,"By default, BRL-CAD's build system enables all standard warnings, many additional warnings, and considers all warnings an error.  BRL-CAD is also integrated with Coverity SCAN and uses other code quality tools for additional reporting during CI validation and periodic code reviews.",Met,All warnings are addressed.  They halt compilation by default for all modes of compilation.,Met,Compilation is maximally strict.  Warnings are considered errors.  Actual gcc/clang warnings currently in effect: -pedantic -pedantic-errors -Wall -Wextra -Wundef -Wfloat-equal -Wshadow -Wbad-function-cast -Wdeclaration-after-statement -Wc++-compat -Winline -Wno-long-long -Wno-variadic-macros -Wdocumentation -Wno-c11-extensions -Werror,Met,Several of the core developers are senior professionals with significant secure software design experience.,Met,"http://brlcad.org/d/node/96
http://blog.coverity.com/2012/02/23/coverity-releases-the-coverity-scan-2011-open-source-integrity-report/
",,,,,,,,,,,,,,,,,Met,Delivery is over https.,Met,Hashes are only available over https.,Met,No CVEs for BRL-CAD to date.  Dependencies are checked for CVEs and updated prior to source release.,Met,No critical vulnerabilities to date.,Met,"https://scan.coverity.com/projects/brl-cad
Clang static analyzer, cppcheck, and findbugs are also run regularly.",Met,https://scan.coverity.com/projects/brl-cad,Met,"https://scan.coverity.com/projects/brl-cad
",Met,"Coverity and Clang static analyzer are not yet hooked into daily CI, but BRL-CAD has several other custom static source code analysis checks integrated into the build, part of CI testing, and a regular part of daily development.",Unmet,"Dynamic analysis is not currently part of BRL-CAD's release repertoire, but several tools are used periodically and have been used in the past including gcov, valgrind, dmalloc, and purify.",Unmet,"Dynamic analysis is not currently part of BRL-CAD's release repertoire, but several tools are used periodically and have been used in the past including gcov, valgrind, dmalloc, and purify.",Unmet,"Dynamic analysis is not currently part of BRL-CAD's release repertoire, but several tools are used periodically and have been used in the past including gcov, valgrind, dmalloc, and purify.",Met,"See no evil, do no evil.",,2016-02-16 19:22:11 UTC,2016-08-26 22:10:07 UTC,,,Met,"BuildBot is used for CI.  The ""distcheck-full"" target in BRL-CAD's build system are run on BRL-CAD's central (SVN) code repository.
",cpe:2.3:a:brlcad:brlcad:-:*:*:*:*:*:*:*,Met,https://sourceforge.net/projects/brlcad/support,Met,,Met,"http://brlcad.org/wiki/Documentation
https://sourceforge.net/projects/brlcad/support
",Met,BRL-CAD extensively uses compiler flags (including -fstack-protector) and static analysis tools (Coverity) to minimize or eliminate undefined behavior.  BRL-CAD has extensive testing strategies in place to detect security issues and unexpected behavior.,Met,There is un unencrypted network communication with an encrypted equivalent.,,There is no SSL / TLS communication in BRL-CAD.,,There is no SSL / TLS communication in BRL-CAD.,,There is no SSL / TLS communication in BRL-CAD.,Unmet,SourceForge supports X-Content-Type-Options nosniff.  GitHub supports multiple.  Project website and download site support none.,Met,CMake build system provides for installation and uninstallation.,Unmet,Reproducible builds are not currently supported as timestamps are intentionally embedded into all libraries and (by extension) all binaries.,100,2016-08-22 03:14:40 UTC,,,False,,3,24,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,22,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,124,,,,,,2016-08-22 03:14:40 UTC,,,Met,
16,67,54,freewvs,freewvs is a tool to search webroots for know vulnerable versions of web applications,https://freewvs.schokokeks.org,https://git.schokokeks.org/git/freewvs.git,CC0-1.0,?,,Met,,Met,,Met,https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md,Met,https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md,Met,https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md,Met,https://git.schokokeks.org/freewvs.git/blob/master/COPYING,Met,,Unmet,"CC0 is effectively public domain, but for obscure reasons it's not listed as an OSI-approved license.",Met,,Met,,Met,,Met,,Met,,Met,,Met,,?,,?,,?,,Met,"We didn't have any known CVEs in the past, but we would if any severe security vulnerability shows up.",?,,Met,https://github.com/schokokeksorg/freewvs/issues,Met,https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md,Met,,Met,,Met,https://github.com/schokokeksorg/freewvs/issues,Met,https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md,Met,"https://git.schokokeks.org/freewvs.git/blob/master/CONTRIBUTIONS.md
https://schokokeks.org/kontakt",Met,,Met,"Project is in python, which is a scripting language, so there is no build, but we use setup.py/setuptools to create wheel packages.",Met,,Met,,Met,,Met,python -m unittest,Met,,?,,?,,?,,Met,dlint,Met,We regularly run the tool with PYTHONWARNINGS=d enabled and fix all warnings.,Met,,Met,,Met,,,,,,,,,,,,,,,,,,Met,,Met,,Met,,Met,,Met,dlint,Met,dlint,Met,,Met,,?,,,,?,,?,,,2016-02-16 23:57:45 UTC,2020-06-19 18:21:02 UTC,,,Met,https://travis-ci.org/github/schokokeksorg/freewvs,,Met,https://github.com/schokokeksorg/freewvs/issues,Met,,Met,,?,,?,,?,,?,,?,,Unmet,"// X-Content-Type-Options was not set to ""nosniff"".",?,,?,,87,,,2022-05-03 23:00:23 UTC,False,Python,39,7,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,87,2019-12-13 11:26:33 UTC,,,,,,,,Met,
17,69,34,The Assimilation Project,"The Assimilation Project discovers and keeps updated deep-dive information about your infrastructure then drives various actions directly from discovery. These include evaluation against best practices like security (compliance), monitoring, alerting, network management and CMDB (configuration management database) functions.",http://AssimProj.org,https://github.com/assimilation/assimilation-official,GPL-3.0+,?,,Unmet,,Met,http://linux-ha.org/source-doc/assimilation/html/index.html,Met,http://linux-ha.org/source-doc/assimilation/html/_contributing.html,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",Met,"http://linux-ha.org/source-doc/assimilation/html/_contributing.html
http://linux-ha.org/source-doc/assimilation/html/_coding_standards.html",Met,https://github.com/assimilation/assimilation-official/blob/master/legal/COPYING,Met,https://github.com/assimilation/assimilation-official/blob/master/legal/COPYING,Met,,Met,http://linux-ha.org/source-doc/assimilation/html/_getting_started.html,Met,http://assimilationsystems.com/2016/03/04/fifteen-minutes-to-better-security/,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,https://github.com/assimilation/assimilation-official/releases,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,https://github.com/assimilation/assimilation-official/releases,Met,https://github.com/assimilation/assimilation-official/releases,Met,There are currently none.,?,,Met,"GitHub Issues, or better yet Trello issues board: https://trello.com/b/98QrdEK1/issues-bugs",Met,"GitHub, Trello, mailing list. https://trello.com/b/98QrdEK1/issues-bugs",Met,"https://github.com/assimilation/assimilation-official/issues
https://trello.com/b/98QrdEK1/issues-bugs",Met,Through Trello primarily. https://trello.com/b/98QrdEK1/issues-bugs,Met,"https://trello.com/b/98QrdEK1/issues-bugs http://lists.community.tummy.com/cgi-bin/mailman/listinfo/assimilation
http://lists.community.tummy.com/pipermail/assimilation/
http://dir.gmane.org/gmane.comp.monitoring.assimilation",?,,?,,Met,There haven't been any yet.,Met,"Non-trivial build file in repository: <https://github.com/assimilation/assimilation-official/blob/master/CMakeLists.txt>.

Better yet: cd docker; ./builditall -- will build versions for 12 different versions of Linux.",Met,Non-trivial build file in repository: <https://github.com/assimilation/assimilation-official/blob/master/CMakeLists.txt>.,Met,"It builds and passes tests on 12 different versions of Linux, all using tools available through Docker and",Met,cd cma; testify tests,Met,"cd cma; testify tests

This runs *all* the tests. Some are in C, some are in Python, some are in Python+C, and some are in the shell. This runs them all.",Unmet,It's not OK. It's just unmet.,Met,"It's understood, but not well documented. The most common external code is discovery scripts, and they're documented by this article: http://assimilationsystems.com/2016/02/13/write-an-assimilation-discovery-agent/",Met,Tests were added for the most recent major change - sending events for changes in compliance. Also made up a deficit from early in the project where there were no tests for LLDP or CDP packet processing.,Unmet,It's not OK. Just unmet.,Met,"We use three methods for this: (1) coverity + clang-analysis for C code, pylint for Python programs. Clang and pylint are part of the normal submit routine. Coverity gets run before every major release. We also run all the tests to complain if all objects are not freed, and in addition we run a few of the C-only tests under Valgrind. Tests fail if Valgrind doesn't like it, or if we don't free memory (under the Python tests).",Met,Our build procedure declares ALL warnings as errors.,Met,"We turn on every C warning flag that we can, and test for old releases that don't support some of the new ones, and automatically adjust the buidl accordingly. All those warnings are treated as errors.",Met,"Alan Robertson has been writing software for nearly 40 years, and has a track record for avoiding security problems.",Met,See above. Coverity also helps catch things that I might have missed.,Met,Our crypto is provided by libsodium.,Met,See above.,Met,Libsodium is FLOSS.,Met,This is under the control of crypto expert Dan Bernstein.,Met,We only use libsodium for crypto.,,Our keys are distributed through a different mechanism - the same that installs the software.,,We don't store passwords.,,Libsodium takes care of this for us.,Met,We use https currently. We will switch to signed packages.,Met,We don't retrieve cryptographic hashes.,Met,There aren't any.,Met,There haven't been any yet.,Met,We use coverity and clang-analyzer for C. I don't know of one for Python. Here is our Coverity project URL:  https://scan.coverity.com/projects/assimilation-system-management-suite,Met,Coverity does this.,Met,Check the stats here: https://scan.coverity.com/projects/assimilation-system-management-suite,Met,The C code is pretty stable. It changes only rarely nowadays.,Met,"I use both a home-grown fuzzing tool ""Fuzzy Monkey"" testing... http://assimilationsystems.com/2016/05/24/testing-distributed-systems-with-fuzzy-monkey-testing/",Met,We run the C-level tests under valgrind - as noted before.,Met,,Met,There haven't been any.,"Note that we use both [GitHub](https://github.com/assimilation/assimilation-official) _and_ [Trello](https://trello.com/b/98QrdEK1/issues-bugs) for project bug reports. We also have a [mailing list](http://lists.community.tummy.com/cgi-bin/mailman/listinfo/assimilation) for interactive discussion, and there is also a [blog](http://assimilationsystems.com/category/blog/) for documentation and announcements about the project.",2016-02-24 21:31:43 UTC,2016-08-12 18:42:07 UTC,Met,We only use libsodium for crypto.,Met,Travis-ci builds and runs tests automaticlaly. The builditall script will do the same thing for 12 versions of Linux.,,Met,"GitHub supports discussions on issues and pull requests. In addition, we make extensive use of Trello boards - like this one for issues and/or bugs: https://trello.com/b/98QrdEK1/issues-bugs Issues created in GitHub are automatically replicated to Trello.",Met,,Met,"http://assimilationsystems.com/2016/03/04/fifteen-minutes-to-better-security/
https://github.com/assimilation/assimilation-official/issues
https://trello.com/b/98QrdEK1/issues-bugs",?,,?,,?,,?,,?,,?,,?,,?,,96,,,2022-03-07 23:00:34 UTC,False,"Python, C, Shell (CII estimate)",29,11,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,9,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,96,,,,,,,,,Met,
18,73,57,The System Integrity Management Project (SIMP),"SIMP is an Open Source, fully automated, and extensively tested framework that can either enhance your existing infrastructure or allow you to quickly build one from scratch. Built on the mature Puppet product suite, SIMP is designed around scalability, flexibility, and compliance. 

Initially designed as a turn-key solution for isolated environments, SIMP includes everything you need to get started building repeatable infrastructures at any scale.",https://simp-project.com,https://github.com/simp/simp-core,Apache-2.0,?,,Met,,Met,The main software description can be found at https://simp-project.com.,Met,"The 'Help' link on https://simp-project.com provides a direct avenue for obtaining community support and the https://simp-project.com/#download-now section has direct links to the GitHub spaces, as does the FAQ.",Met,Non-trivial contribution file in repository: <https://github.com/simp/simp-core/blob/master/CONTRIBUTING.md>.,Met,Contribution documentation at https://simp.readthedocs.io/en/master/contributors_guide/index.html,Met,Non-trivial license location file in repository: <https://github.com/simp/simp-core/blob/master/LICENSE>.,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,The documentation can be found at https://simp.readthedocs.org,Met,The documentation can be found at https://simp.readthedocs.org,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,All sub-components use Semantic Versioning 2.0.0. The overall build uses a modification to Semantic Versioning that is tied directly to the version of the underlying Operating System. This is covered in the documentation for the product.,Met,,Met,Git tags are used for each release,Met,There are changelogs in each package repository for each sub-component as well as a master changelog in the https://github.com/simp/simp-doc project.,Met,Vulnerabilities that are fixed are specifically noted in each master changelog.,?,,Met,All issues are tracked at https://simp-project.atlassian.net.,Met,Bug reports can be submitted at https://simp-project.atlassian.net.,Met,Bugs are triaged as they are submitted into the bug tracking system.,Met,Enhancement requests are triaged every three weeks.,Met,The bug tracking system at https://simp-project.atlassian.net is publicly accessible.,Met,Material on reporting security issues is at https://simp.readthedocs.io/en/master/help/Public_Resources.html and a triage process is in place.,Met,"Per https://github.com/NationalSecurityAgency/SIMP#google-groups, private reports may be sent to the private SIMP security forum at https://groups.google.com/forum/?fromgroups#!forum/simp-security",Met,,Met,All components are built and tested using TravisCI and Jenkins. ConcourseCI is on the way.,Met,All components are built and tested using TravisCI and Jenkins. ConcourseCI is on the way.,Met,Any system with RVM and 'mock' can build any or all components. Many components are usable in their raw form.,Met,All component tests are released as part of the source code.,Met,All tests can be run using 'rake',Met,Most critical paths are tested both with unit tests and acceptance tests.,Met,"If tests are not added, unless the change it trivial, the code review process will flag a need for improvement.",Met,,Unmet,Documentation should be updated.,Met,A linter is run on all code to find issues.,Met,Warnings are not allowed except where explicitly codified.,Met,,Met,,Met,,Met,,Met,,Met,,Met,The system is Linux kernel enforced FIPS conformant by default.,Met,,Met,,Met,"This is met, but OS and application functionality conformance is maintained where required.",,This is up to the final implementing user.,Met,,Met,,Met,,Met,,,Our production code is mostly Puppet code and a static code analysis tool could not be found to work with Puppet at this time.,,,,,,,Unmet,,Unmet,,Unmet,,Met,,,2016-03-03 01:40:08 UTC,2017-07-22 13:40:23 UTC,Met,,Met,All components are built and tested using TravisCI and Jenkins. ConcourseCI is on the way.,,Met,https://github.com/NationalSecurityAgency/SIMP#community details the methods that are available for freely and openly communicating with the SIMP team.,Met,,Met,,Met,,Met,As applicable RFCs allow.,Met,,Met,,Met,,Unmet,"Mostly met, GitHub is compliant, BinTray is not but all packages are GPG signed with a public key available from GitHub. X-Content-Type-Options was not set to ""nosniff"".",Met,All packages are created using RPM and Puppet module files.,Met,See https://github.com/simp/simp-core for details on building the project,100,2017-05-18 16:34:35 UTC,,2017-05-16 23:00:41 UTC,False,"Ruby, Puppet, RestructuredText, Shell",10,29,Unmet,,Unmet,,Unmet,,Unmet,,Met,"The SIMP project is actively maintained by Onyx Point, Inc. (https://onyxpoint.com)",Met,https://github.com/orgs/simp/people,Unmet,,Unmet,,Met,http://simp.readthedocs.io/en/master/security_conop/index.html and http://simp.readthedocs.io/en/master/security_mapping/index.html,Met,http://simp.readthedocs.io/en/master/getting_started_guide/index.html,Met,http://simp.readthedocs.io/en/latest/getting_started_guide/index.html,Met,https://github.com/simp/simp-core,,There are no GUI or web applications involved in SIMP Core,,There is no text generated for end users.,,The project sites do not store user credentials,Unmet,,Met,Vulnerabilities are tracked under the various system sub-component CHANGELOG files https://github.com/simp,Met,http://simp.readthedocs.io/en/latest/help/Public_Resources.html,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,17,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,129,,,,,,2017-05-18 16:34:35 UTC,,,Met,
19,74,1537,Zephyr Project,"The Zephyr Project is a small, scalable real-time operating system for use on resource-constrained systems supporting multiple architectures. Developers are able to tailor their optimal solution. As a true open source project, the community can evolve the Zephyr Project to support new hardware, developer tools, sensor and device drivers. Advancements in security, device management capabilities, connectivity stacks and file systems can be easily implemented. ",https://www.zephyrproject.org,https://github.com/zephyrproject-rtos/zephyr,Apache-2.0,?,,Met,"https://github.com/zephyrproject-rtos/zephyr
https://www.zephyrproject.org",Met,https://www.zephyrproject.org/   -- on the landing page.,Met,https://www.zephyrproject.org/community/  - The project provides multiple channels to communicate and includes a GitHub instance to track development and report bugs.  https://github.com/zephyrproject-rtos/zephyr/issues,Met,https://www.zephyrproject.org/community/#community-guidelines,Met,https://docs.zephyrproject.org/latest/contribute/index.html -- Require contributors to adhere to specific coding styles and guidelines outlined in the project documentation. ,Met,"https://github.com/zephyrproject-rtos/zephyr/releases -- Has tags of each release, including source code, with licensing information included
An overview of the releases can be found on https://www.zephyrproject.org/developer-resources/#current-release",Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI). https://opensource.org/licenses/Apache-2.0 The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,https://docs.zephyrproject.org/latest/,Met,"This section describes the major features of the Zephyr and how to use them. https://docs.zephyrproject.org/latest/guides/index.html
Also include an application development primer: https://docs.zephyrproject.org/latest/application/index.html",Met,https://github.com/zephyrproject-rtos/zephyr,Met,"It's a GitHub Repository with Git Issues for issue tracking.  Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,https://github.com/zephyrproject-rtos/zephyr/issues,Met,"https://github.com/zephyrproject-rtos/ -- Repository on GitHub, which uses git. git is distributed.",Met,https://github.com/zephyrproject-rtos/zephyr/releases,Met,,Met,https://www.zephyrproject.org/developer-resources/#current-release,Met,example release note: https://github.com/zephyrproject-rtos/zephyr/releases,Met, https://github.com/zephyrproject-rtos/zephyr/releases,?,,Met,https://github.com/zephyrproject-rtos/zephyr/issues,Met,"Project has both GitHub Issues and public mailing lists. https://github.com/zephyrproject-rtos/zephyr/issues  , lists.zephyrproject.org",Met,The project has a Technical steering committee that works on reviewing and prioritizing the development work.  There is a security subcommittee to address security issues. ,Met,The project has a Technical steering committee that works on reviewing and prioritizing the development work. ,Met,Mailing lists have public archives and the GitHub instance.  https://github.com/zephyrproject-rtos/zephyr/issues,Met,"Has a security issues and reporting in the readme.rst -- https://github.com/zephyrproject-rtos/zephyr/
http://docs.zephyrproject.org/security/security-overview.html",Met,"http://docs.zephyrproject.org/security/security-overview.html#security-issue-management

Private vulnerability reports are supported and encouraged, bellow is one report done by NCCgroup
https://research.nccgroup.com/wp-content/uploads/2020/05/NCC_Group_Zephyr_MCUboot_Research_Report_2020-05-26_v1.0.pdf",Met,We have a security working group that receives the reports and the team is supposed to respond within 7 days.,Met,The project provides SDK -- https://github.com/zephyrproject-rtos/meta-zephyr-sdk/releases/,Met,"We provide SDK -- https://github.com/zephyrproject-rtos/sdk-ng
And Documentation for developers to get started at https://docs.zephyrproject.org/latest/index.html",Met,This is open source project build with and on open source development tools.   Here are the instructions to getting setup with your development environment: https://docs.zephyrproject.org/latest/getting_started/index.html,Met,"Twister tool that's part of the source code,runs all the test for the supported boards and platforms. The build system also runs this sanity check. 
https://github.com/zephyrproject-rtos/zephyr/tree/main/tests
",Met,python script that is called to run test cases written in standard C. see https://github.com/zephyrproject-rtos/zephyr/blob/main/CONTRIBUTING.rst (twister),Unmet,This is a work in progress,Met,This process is established by the core development team and outlined in the documentation. http://docs.zephyrproject.org/index.html,Met,This is documented in the commit logs and pull requests. https://github.com/zephyrproject-rtos/zephyr/issues,Met,https://github.com/zephyrproject-rtos/zephyr/blob/main/CONTRIBUTING.rst,Met,"Yes,  Uses gcc warning - defaults to ----,  build system supports 3 levels of warnings make W=1, -W=2, W=3.",Met,Build system generates warnings and fails until it's fixed. ,Met,Build system statically compiles and fails when met with warnings. CI also catch potential issues before being accepted into the code. ,Met,We have a security sub committee dedicated to monitoring and ensuring security best practices are followed. ,Met,We have a security team comprising of experts in the space. ,Met,Application uses TinyCrypt or mbedTLS libraries to manage cryptography with members of security working group actively participating in these projects.,Met,Uses tinyCrypt https://github.com/01org/tinycrypt and mbedTLS https://github.com/ARMmbed/mbedtls,Met,,Met,"Link for complete details:  https://docs.zephyrproject.org/latest/guides/crypto/tinycrypt.html

SHA-256:
Type of primitive: Hash function.
Standard Specification: NIST FIPS PUB 180-4.
Requires: –
HMAC-SHA256:
Type of primitive: Message authentication code.
Standard Specification: RFC 2104.
Requires: SHA-256
HMAC-PRNG:
Type of primitive: Pseudo-random number generator.
Standard Specification: NIST SP 800-90A.
Requires: SHA-256 and HMAC-SHA256.
AES-128:
Type of primitive: Block cipher.
Standard Specification: NIST FIPS PUB 197.
Requires: –
AES-CBC mode:
Type of primitive: Encryption mode of operation.
Standard Specification: NIST SP 800-38A.
Requires: AES-128.
AES-CTR mode:
Type of primitive: Encryption mode of operation.
Standard Specification: NIST SP 800-38A.
Requires: AES-128.
AES-CMAC mode:
Type of primitive: Message authentication code.
Standard Specification: NIST SP 800-38B.
Requires: AES-128.
AES-CCM mode:
Type of primitive: Authenticated encryption.
Standard Specification: NIST SP 800-38C.
Requires: AES-128.
ECC-DH:
Type of primitive: Key exchange.
Standard Specification: RFC 6090.
Requires: ECC auxiliary functions (ecc.h/c).
ECC-DSA:
Type of primitive: Digital signature.
Standard Specification: RFC 6090.
Requires: ECC auxiliary functions (ecc.h/c).",Met,We don't use any of them.,Met,,,"Statically compiled binary, no user login. ",Met,"In embedded environment,  there is a dependency on hardware entropy sources.  
Our sample applications show how to leverage the drivers.  
",Met,Uses Git and hashes. Project pages https.,Met,,Met,,Met,We have well documented survivability plan for the zephyr project and SDK. This will be part of the security working groups process.,Met,We use Coverity tied to weekly builds. Security working group will determine future process that will include static analysis. ,Met,Coverity (https://www.synopsys.com/software-integrity/security-testing/static-analysis-sast.html) is used for static code analysis.,Met,They are logged as issues and resolved before release.,Met,"We don't do daily builds. Builds are completed on a weekly basis as part of CI, and run through coverity. ",Met,"Threat model documented and known threats, like bluetooth LE comms stack fully fuzz tested using Defensics Fuzzing Tool. ",,Software is not application-level.,Met,Software is not application-level.,Met,Software is not application-level. Any CVEs found via static code analysis or responsible disclosure channels are dealt with promptly. ,,2016-03-10 17:42:23 UTC,2021-12-15 23:55:04 UTC,Met,"There are no default usages for weak crypto, SSH is not being used and is not supported.",Met,https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain,cpe:ZephyrProject,Met,"Have multiple channels of communication, GitHub, Discord, Mailing lists, etc.
For further details, see https://www.zephyrproject.org/community/#connect",Met,"The Zephyr Project does not distribute any credentials, but does work with MCUboot. The MCUboot bootloader is distributed with a small number of development keys that are checked into the project’s repository. The instructions (https://mcuboot.com/imgtool.html) in the project clearly state that these keys are only for development, and private keys used for production need to be protected.",Met,https://github.com/zephyrproject-rtos/zephyr/issues,Met,"We do build by default with -Wformat -Wformat-security -Wno-format-zero-length and stack-protector is enabled as an option where supported. It is disabled by default for performance reasons but can be enabled by the user.  The master CMake file contents show this to be the case:

https://github.com/zephyrproject-rtos/zephyr/blob/master/CMakeLists.txt",Met,"We support TLS and DTLS for all communication protocols. HTTPS, COAPS and any other protocols can be abled with additional security enabled.",Met,"All configurations of the project use TLS 12 by default:

lib/crypto/mbedtls/configs/config-ccm-psk-tls1_2.h:#define MBEDTLS_SSL_PROTO_TLS1_2
ext/lib/crypto/mbedtls/configs/config-coap.h:#define MBEDTLS_SSL_PROTO_TLS1_2
ext/lib/crypto/mbedtls/configs/config-mini-dtls1_2.h:#define MBEDTLS_SSL_PROTO_TLS1_2
ext/lib/crypto/mbedtls/configs/config-mini-tls1_2.h:#define MBEDTLS_SSL_PROTO_TLS1_2
ext/lib/crypto/mbedtls/configs/config-threadnet.h:#define MBEDTLS_SSL_PROTO_TLS1_2

https://github.com/zephyrproject-rtos/zephyr/tree/master/ext/lib/crypto/mbedtls/configs

",Met,"The project contains a sample application that is located at the primary repository located at: https://github.com/zephyrproject-rtos/zephyr
The sample application implements a proper TLS secure connection and publishes data to the Google Cloud.",Met,"The project contains a sample application that is located at the primary repository located at: https://github.com/zephyrproject-rtos/zephyr
The sample application implements a proper TLS secure connection and publishes data to the Google Cloud.",Met,"The project websites implement hardening headers.

www.zephyrproject.org
https://github.com/zephyrproject-rtos/zephyr // One or more of the required security hardening headers is missing. // X-Content-Type-Options was not set to ""nosniff"".",Met,The build system provides a common method for installing on all target platforms.,Met,Reproducible builds are guaranteed with an SDK provided by the project that given a commit or the same state of the source code would generate the same binaries and output files. Timestamps are not enabled by default and used only for debugging and testing. https://github.com/zephyrproject-rtos/zephyr/wiki/Repeatable-Builds-by-Architecture,100,2018-03-10 20:50:26 UTC,2018-03-10 20:49:56 UTC,,False,"C, Python",78,100,Met,DCO and signed-off-by expectations are documented in contribution guidelines: https://www.zephyrproject.org/doc/contribute/contribute_guidelines.html and in the GitHub CONTRIBUTING.rst file,Met,https://www.zephyrproject.org/about/organization,Met,"Contributing and Conduct guidelines are found https://www.zephyrproject.org/community/community-guidelines
",Met,also documented at https://www.zephyrproject.org/about/organization,Met,"The project has distributed maintainer and codeowner roles, as found in the GitHub repository CODEOWNER files (https://github.com/zephyrproject-rtos/zephyr/blob/master/CODEOWNERS).  There are also multiple administrators for the GitHub site that are authorized to merge pull requests, and the development team is spread around the world (Canada, India, multiple US locations).",Met,"Using the truck-factor tool, we have a TF of 12, see https://github.com/zephyrproject-rtos/zephyr/wiki/Truck-Factor for the output from the tool.",Met,The next 4 planned releases (1 year outlook) are shown here: https://github.com/zephyrproject-rtos/zephyr/projects/9,Met,"The Zephyr Kernel Primer (https://www.zephyrproject.org/doc/kernel/kernel.html) has an introduction to the kernel's key capabilities and services, along with an overview of the source tree structure.",Met,https://www.zephyrproject.org/doc/security/security-overview.html outlines the steps of the Zephyr Security board towards a defined security process that helps developers build more secure software while addressing security compliance requirements,Met,Getting Started guide is here: https://www.zephyrproject.org/doc/getting_started/getting_started.html,Met,"Documentation is maintained and released with each tagged release of the software (e.g., https://www.zephyrproject.org/doc/1.8.0/ for the 1.8 release).  Additionally, the master branch documentation is updated and maintained at https://www.zephyrproject.org/doc. Documentation defects are tracked along with code defects in our Jira (soon to be GitHub issues) system.",Met,https://github.com/zephyrproject-rtos/zephyr has the cii best practices badge and the announcement page (https://www.zephyrproject.org/news/announcements) mentions project achievements. ,,"Zephyr is an embedded OS without any user interface or textual output. This can come as part of an application on top of Zephyr, but zephyr itself does not have any end-user facing interface that needs to be internationalised.",,"Zephyr is an embedded OS without any user interface or textual output. This can come as part of an application on top of Zephyr, but zephyr itself does not have any end-user facing interface that needs to be internationalised.",Met,Website is not available for external users. Github and other services used do use a 2 factor authentication for all contributors.,Met,Previous software releases are available from https://www.zephyrproject.org/downloads.  A plan for Long-Term-Support (LTS) support is in progress.,Met,"All changes to software are submitted through the GitHub pull request process and logged and reviewed there:  https://github.com/zephyrproject-rtos/zephyr/pulls.  Git log tools can be used to generate detailed reports, as well as summaries on  https://github.com/zephyrproject-rtos/zephyr/pulse for insights.",Met,Security-related issue reporting is mentioned on https://www.zephyrproject.org/doc/introduction/introducing_zephyr.html and documented in  https://www.zephyrproject.org/doc/security/security-overview.html,Met,The project contribution guidelines include coding standards and tools for verifying: https://www.zephyrproject.org/doc/contribute/contribute_guidelines.html#coding-style,Met,"gitlint and checkpatch tools automatically verify and enforce coding standards, as documented in https://www.zephyrproject.org/doc/contribute/contribute_guidelines.html#coding-style",Met,We're using CMake to generate binaries which does support the above and does honor environment variables.,Met,"The generated ELF has debugging information, however the binary installed to the final platform may not preserve this information.",Met,Any cross dependencies will cause a rebuild of the dependent component.,Met,"Rebuilding binaries that have no variable data such as timestamps results in the same bit-for-bit output, this is verified by building a binary for a certain configuration multiple times and comparing check-sums of generated binaries and all other output.",,"We install the compiled image in a platform-specific way (e.g., to flash)",Met,"We have getting started guides for Linux, Windows, and MacOS",Met,"Note: this is about installation of items that are needed to use and build zephyr, see requirement above.

External components are identified in the /ext area in GitHub:  https://github.com/zephyrproject-rtos/zephyr/tree/master/ext  but those are not ""installed"", they are part of the source. For external dependencies need to build and test the project we have scripts/requirements.txt (https://github.com/zephyrproject-rtos/zephyr/blob/master/scripts/requirements.txt).",Met,"see https://github.com/zephyrproject-rtos/zephyr/issues/6533, one step of the release process is to verify for known vulnerabilities",Met,"External components are self-contained without any modifications or local changes, we maintain information about the source and origin of such components and track the used versions and SHAs in case of git repositories. Updating to a new component is in most cases a drop-in replacement of existing code. We will support external components in external repos. Additional, wherever we have local modifications, we maintain a fork of the original trees and keep the trees up-to-date with upstream.
Local modification are submitted upstream where applicable, this is a policy of the project.",Met,"The project is self-contained and does use minimal external APIS, mostly from libc. We verify usage of those APIs on constant basis and remove any obsolete usage when found or reported.",Met,"Each commit/Pull Request requires passing a series of sanity checks, including building documentation, driven by the ""shippable"" tool: https://app.shippable.com/github/zephyrproject-rtos/zephyr/dashboard
",Met,Issues that are marked with regression label (https://github.com/zephyrproject-rtos/zephyr/labels/Regression) will be added to automated test-suite and integration tests that run through CI where applicable.,Met,"We use gcov/lcov to measure coverage of core features of the project. Due to the fact that Zephyr is an RTOS that can't be run with all features enabled on a host system, the coverage of some areas is not measured yet, the kernel however is being measured and has coverage of 80% in the supported configuration and where measurement is possible. Coverage reports can be found here: https://codecov.io/gh/zephyrproject-rtos/zephyr",Met,Policy for adding new functionality and the requirements on tests can be seen here: https://github.com/zephyrproject-rtos/zephyr/blob/master/CONTRIBUTING.rst,Met,http://docs.zephyrproject.org/security/secure-coding.html,,"The project does not have user interfaces that would allow user input by default, so this is out of scope. If those interfaces are added by the developer/user they need to follow our secure coding practices document in the project here:  http://docs.zephyrproject.org/security/security.html",Met,"Through the support of mbedTLS and tinyCrypt, users and developers have  a variety of algorithms to choose from.",,This is application specific and is out of scope for the project. Mechanism to support this requirement are provided in general terms. Application developer will have to follow best practices for their use-case.,Met,We don't do binary distributions and Git provides a secure release history.,Met,"Starting with release 1.12,  the releases are now being signed by keys of recognized developers & maintainers.",100,Met,"See the contributor list in github:

https://github.com/zephyrproject-rtos/zephyr/graphs/contributors",Met,All existing and future contributions will contain copyright holder and year.,Met,All files contain a SPDX license statement.,Met,"""good first issue"" label in GH issues:  https://github.com/zephyrproject-rtos/zephyr/labels/good%20first%20issue",Met,Using Github 2FA and enforcing all contributors and members of the project to use this method of authentication.,Met,Using Github 2FA and enforcing all contributors and members of the project to use this method of authentication.This method relies on google authenticator which is time based TOTP,Met,https://github.com/zephyrproject-rtos/zephyr/blob/master/CONTRIBUTING.rst,Met,GH pull requests do not allow the original author to merge their own changes.,Met,https://codecov.io/gh/zephyrproject-rtos/zephyr,Met,https://codecov.io/gh/zephyrproject-rtos/zephyr,Met,"This was done in 2017 and performed by David Brown and most recently
https://research.nccgroup.com/wp-content/uploads/2020/05/NCC_Group_Zephyr_MCUboot_Research_Report_2020-05-26_v1.0.pdf",Met,"The project maintains documentation of current threat models, identification of assets, and trust boundaries.  The documentation also provides coding and development guidelines intended to mitigate threats.

See: https://docs.zephyrproject.org/latest/security/secure-coding.html",Met,,Met,,300,,,,,,2018-03-10 20:50:26 UTC,,,Met,
20,78,62,Puppet module for the OpenDaylight SDN controller.,,https://github.com/dfarrell07/puppet-opendaylight,https://github.com/dfarrell07/puppet-opendaylight,BSD-2-Clause,?,,Met,,?,,?,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",?,,Met,Non-trivial license location file in repository: <https://github.com/dfarrell07/puppet-opendaylight/blob/master/LICENSE>.,Met,The BSD-2-Clause license is approved by the Open Source Initiative (OSI).,Met,The BSD-2-Clause license is approved by the Open Source Initiative (OSI).,?,,?,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Met,Non-trivial release notes file in repository: <https://github.com/dfarrell07/puppet-opendaylight/blob/master/CHANGELOG>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,Non-trivial build file in repository: <https://github.com/dfarrell07/puppet-opendaylight/blob/master/Rakefile>.,Met,Non-trivial build file in repository: <https://github.com/dfarrell07/puppet-opendaylight/blob/master/Rakefile>.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-03-31 17:20:09 UTC,2016-05-19 15:28:54 UTC,?,,?,,,Met,GitHub supports discussions on issues and pull requests.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,19,,,2022-05-03 23:00:23 UTC,False,,30,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,19,,,,,,,,,Met,
21,79,63,NTPsec,"The Network Time Protocol Reference Implementation, refactored",https://ntpsec.org,https://gitlab.com/NTPsec/ntpsec,(BSD-2-Clause AND NTP),?,,Met,,Met,,Met,,Met,https://www.ntpsec.org/contributor.html,Met,https://www.ntpsec.org/contributor.html,Met,https://www.ntpsec.org/license.html,Met,https://www.ntpsec.org/license.html,Met,,Met,https://docs.ntpsec.org/,Met,https://docs.ntpsec.org/latest/,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,https://gitlab.com/NTPsec/ntpsec/blob/master/NEWS,Met,,?,,Met,https://gitlab.com/NTPsec/ntpsec/issues,Met,https://www.ntpsec.org/channels.html,Met,,Met,,Met,https://www.ntpsec.org/channels.html,Met,https://www.ntpsec.org/security.html,Met,https://www.ntpsec.org/security.html,Met,,Met,,Met,,Met,,Met,,Met,,Met,"Test Suite seems to run tests that cover most functions:
https://gitlab.com/NTPsec/ntpsec/tree/master/tests",Met,,Met,"Updated tests are shown in ChangeLog:
https://gitlab.com/search?utf8=%E2%9C%93&search=test&group_id=&project_id=553594&search_code=true&repository_ref=master",Unmet,No documentation found.,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,,"NTPsec must be compliant with IETF RFCs for the Network Time Protocol, which mandate keylengths not in compliance with this requirement",,"NTPsec must be compliant with IETF RFCs for the Network Time Protocol, which mandate algorithms not in compliance with this requirement",,"NTPsec must be compliant with IETF RFCs for the Network Time Protocol, which mandate algorithms not in compliance with this requirement",,,Met,,Met,,Met,,Met,,Met,,Met,"Currently uses Coverity, see https://scan.coverity.com/projects/ntpsec",Met,Coverity,Met,,Unmet,"Analysis ran regularly, but not as often as everyday or on every commit",Met,"Uses Synopsys Defensics and Americian Fuzzy Lop (I need links to these?)
https://gitlab.com/NTPsec/ntpsec/tree/master/util",Met,,Met,,Met,All known vulnerabilities noted have been fixed.,,2016-03-31 20:50:55 UTC,2018-06-20 06:38:04 UTC,,"NTPsec must be compliant with IETF RFCs for the Network Time Protocol, which mandate algorithms not in compliance with this requirement",Met,,,Met,https://www.ntpsec.org/channels.html,Met,,Met,"https://www.ntpsec.org/contributor.html
https://www.ntpsec.org/channels.html",?,,?,,?,,?,,?,,Met,Found all required security hardening headers.,?,,?,,100,2016-08-22 22:24:01 UTC,,,False,,3,13,Met,https://gitlab.com/NTPsec/ntpsec/blob/master/devel/hacking.txt,?,,?,,Met,"https://www.ntpsec.org/core-team.html
https://gitlab.com/NTPsec/ntpsec/blob/master/devel/hacking.txt",?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,,Unmet,,113,,,,,,2016-08-22 22:24:01 UTC,,,Met,
22,80,66,OpenBlox,OpenBlox is a game engine providing a Lua API to enable developers to create games easily and with few restrictions.,https://wiki.openblox.org,https://git.openblox.org/libopenblox.git,LGPL-3.0+,?,,Met,,Met,https://wiki.openblox.org/wiki/Project:Home,Met,https://bugs.openblox.org/,Met,https://wiki.openblox.org/wiki/Contributing,Met,https://wiki.openblox.org/wiki/Contributing,Met,"https://git.openblox.org/libopenblox.git/tree/COPYING
https://git.openblox.org/libopenblox.git/tree/COPYING.LESSER",Met,The LGPL-3.0 license is approved by the Open Source Initiative (OSI).,Met,The LGPL-3.0 license is approved by the Open Source Initiative (OSI).,Met,"https://wiki.openblox.org/
Doxygen documentation can be generated from the source tree",Met,"Doxygen is used for the C/C++ API, the OpenBlox wiki documents the Lua interface.",Met,,Met,,Met,,Met,https://git.openblox.org/openblox/libopenblox/,Met,,Met,,Met,,Met,"Before the first release, there will be a ChangeLog in org format at https://git.openblox.org/libopenblox.git/tree/CHANGELOG",Met,,?,,Met,,Met,https://bugs.openblox.org/,Met,,Met,,Met,https://bugs.openblox.org/,Met,https://bugs.openblox.org/,Met,Private vulnerability reports are not supported. https://bugs.openblox.org/,Met,,Met,,Met,autotools + make,Met,,Met,,Unmet,make check,Met,,Met,"For the library, there are both a set of scripts in the /test/ directory that are run by a test suite specific version of the OpenBlox client, which also tests the C++ API of the engine, which doesn't change anywhere near as often as Instance classes and the like.",Met,,Met,,Met,"Not only does OpenBlox meet these requirements, but I also personally run valgrind and fix any memory issues before I commit code to the project.",Met,,Met,,Met,,Met,,Met,"OpenBlox uses trusted external libraries, such as openssl, for cryptography.",Met,,Met,,Met,,Met,,Met,"When supported by the host machine/version of openssl, OpenBlox meets these requirements.",Met,OpenBlox does not store passwords.,Met,,Met,"Other than the Git protocol, OpenBlox relies entirely on secure protocols for accessing the project's infrastructure and source.

OpenBlox developers use ssh to access OpenBlox servers and as a remote to git repositories.",Met,,Met,,Met,,Met,,Met,,Met,,Met,,Unmet,,Met,I use Valgrind for this purpose.,Unmet,,Met,,,2016-04-04 14:28:50 UTC,2018-11-15 01:22:43 UTC,Met,,Met,https://git.openblox.org/openblox/libopenblox/blob/master/.gitlab-ci.yml,,Met,https://lists.openblox.org/,Met,,Met,,?,,Met,,Met,"OpenBlox does not directly make TLS connections, but the libraries used in OpenBlox support TLS.",Met,,Met,,Unmet,"// X-Content-Type-Options was not set to ""nosniff"".",Met,We use GNU Autotools to generate a Makefile for our project. That Makefile supports `make install`.,Met,https://git.openblox.org/openblox/libopenblox/blob/master/.gitlab-ci.yml,99,2016-04-04 15:07:00 UTC,2018-11-15 01:17:31 UTC,2022-03-24 23:00:44 UTC,False,,24,7,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,39,?,,?,,?,,Met,https://git.openblox.org/openblox/libopenblox/issues,Met,"https://git.openblox.org/openblox/libopenblox/

We do *NOT* employ ""sensitive data"", no vulnerability reports should be private.",Met,https://git.openblox.org/openblox/libopenblox/,Met,https://openblox.org/contributing#development,Met,This is currently done for all contributions other than those of the Project Lead.,Unmet,,Unmet,,?,,?,,Unmet,,Unmet,,99,,,,,,2016-04-04 15:07:00 UTC,,,Met,
23,81,50,libssh2,"a client-side SSH library for the SSH2 protocol, including SFTP and SCP support",https://www.libssh2.org,https://github.com/libssh2/libssh2,BSD-3-Clause,?,,Met,,Met,,Met,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",Met,"Basic guidelines in the link used above:  https://guides.github.com/activities/contributing-to-open-source/
Recommendation: Outline more specific to their project somewhere in their repo",Met,Non-trivial license location file in repository: <https://github.com/libssh2/libssh2/blob/master/COPYING>.,Met,3-clause BSD license The BSD-3-Clause license is approved by the Open Source Initiative (OSI).,Met,The BSD-3-Clause license is approved by the Open Source Initiative (OSI).,Met,,Met,"API library with examples and further documentation:
https://www.libssh2.org/docs.html",Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,,Met,Non-trivial release notes file in repository: <https://github.com/libssh2/libssh2/blob/master/NEWS>.,Met,,?,,Met,https://github.com/libssh2/libssh2/issues,Met,https://github.com/libssh2/libssh2/issues,Met,,Met,All enhancement reports have been responded to: https://github.com/libssh2/libssh2/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement,Met,https://github.com/libssh2/libssh2/issues,Met,https://www.libssh2.org/security.html,Met,https://www.libssh2.org/security.html,Met,,Met,Non-trivial build file in repository: <https://github.com/libssh2/libssh2/blob/master/CMakeLists.txt>.,Met,Non-trivial build file in repository: <https://github.com/libssh2/libssh2/blob/master/CMakeLists.txt>.,Met,,Met,,Met,,Unmet,,Met,"Mentioned in TODO:
https://github.com/libssh2/libssh2/blob/master/docs/TODO",Unmet,TODO mentions that test should be added to expand across more functions,Unmet,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,?,,,,Met,,Met,,Met,,Met,No known vulnerabilities.,Met,No known vulnerabilities.,Met,We run clang-analyzer daily: https://libssh2.org/scans/,Unmet,No tool found,,No tool found,,No tool found,Unmet,No dynamic analysis tool found,Unmet,"No dynamic analysis tool found, written mainly in C",Unmet,No dynamic analysis tool found,Met,No known vulnerabilities found.,,2016-04-04 21:57:28 UTC,2018-09-18 14:16:39 UTC,Met,,Met,,,Met,GitHub supports discussions on issues and pull requests.,Met,,Met,,Unmet,,Met,,,,,,,,Unmet,"// X-Content-Type-Options was not set to ""nosniff"".",Met,,Met,,97,,,2016-10-12 23:00:41 UTC,True,C,3,9,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,13,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,97,,,,,,,,,Met,
24,82,69,launchpad-project cli,Command line tool for WeDeploy.,https://github.com/launchpad-project/cli,https://github.com/launchpad-project/cli,MIT,?,,Met,,?,,?,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",?,,Met,Non-trivial license location file in repository: <https://github.com/launchpad-project/cli/blob/master/LICENSE>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,?,,?,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Unmet,No release notes file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,No build file found.,Unmet,No build file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-04-05 07:18:46 UTC,2016-08-09 23:14:59 UTC,?,,?,,,Met,GitHub supports discussions on issues and pull requests.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,16,,,2022-03-06 23:00:20 UTC,False,,28,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,16,,,,,,,,,Met,
25,84,70,Bart,"Bart is a PHP project. It originally began its life as a collection of Build and Release Tools used internally at Box. Over time, it's grown into a collection of critical pieces of our PHP frameworks.

We use it at Box as the base of several of our internal projects.

Please read through the [Bart Wiki](https://github.com/box/bart/wiki) for full details of the features, configurations, and installation instructions.",https://github.com/box/bart,https://github.com/box/bart,Apache-2.0,?,,Met,,Met,https://github.com/box/bart/blob/master/README.md,Met,https://github.com/box/bart/blob/master/README.md,Met,Non-trivial contribution file in repository: <https://github.com/box/bart/blob/master/CONTRIBUTING.md>.,Met,https://github.com/box/bart/blob/master/README.md,Met,Non-trivial license location file in repository: <https://github.com/box/bart/blob/master/LICENSE>.,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,The Apache-2.0 license is approved by the Open Source Initiative (OSI).,Met,https://github.com/box/bart/wiki,Met,https://github.com/box/bart/wiki,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,"We release primarily only minor version changes. Major versions are released when we deprecate old features, per http://semver.org/.",Met,"Repository on GitHub, which uses git. git is distributed.",Met,http://semver.org/,Met,,Met,https://github.com/box/bart/releases,Unmet,No release notes file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Met,https://github.com/box/bart/blob/master/.travis.yml,Met,The https://github.com/box/bart/blob/master/.travis.yml file specifies how to configure and then run the PHPUnit tests. ,Met,PHP and PHPUnit are the only tools necessary.,Met,See the `test` directory.,Met,phpunit,Met,Mostly.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-04-05 15:43:01 UTC,2016-05-19 15:28:54 UTC,?,,Met,Using TravisCI. See https://github.com/box/bart/blob/master/.travis.yml,,Met,GitHub supports discussions on issues and pull requests.,?,,Met,https://github.com/box/bart/wiki and GitHub support for bugs. ,?,,?,,?,,?,,?,,?,,?,,?,,40,,,2022-05-03 23:00:23 UTC,False,"PHP, Shell (CII estimate)",31,2,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,9,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,40,,,,,,,,,Met,
26,85,49,AquaticPrime,Mac software licensing code using cryptographically signed license files,http://github.com/bdrister/AquaticPrime,https://github.com/martiancraft/AquaticPrime,,?,,Unmet,,?,,?,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",?,,Unmet,No license location file found.,?,,?,,?,,?,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",?,,Met,"Repository on GitHub, which uses git. git is distributed.",?,,?,,?,,Unmet,No release notes file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,No build file found.,Unmet,No build file found.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,,2016-04-06 17:22:29 UTC,2016-05-19 15:28:54 UTC,?,,?,,,Met,GitHub supports discussions on issues and pull requests.,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,10,,,2022-05-03 23:00:23 UTC,False,"Objective-C, REALbasic, PHP (CII estimate)",30,0,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,10,,,,,,,,,Met,
27,87,75,OpenSSL before Heartbleed,"This is a *historical* badge entry for the OpenSSL project before the Heartbleed vulnerability was reported, circa February 2014.  Please note that the OpenSSL project's status has changed substantially since then.  For the current state of OpenSSL, see the [current OpenSSL badge entry](https://bestpractices.coreinfrastructure.org/projects/54).  See also [How to Prevent the Next Heartbleed](http://www.dwheeler.com/essays/heartbleed.html).  OpenSSL is an open source project that provides a robust, commercial-grade, and full-featured toolkit for the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) protocols. It is also a general-purpose cryptography library.

For consistency, we will reference a copy of the OpenSSL project page as it existed on 2014-02-28, which is available via: https://web.archive.org/web/20140228164816/http://www.openssl.org/ - at that time the current released version of OpenSSL was version 1.0.0l, and beta 1 of version 1.0.2 had been recently released. It can sometimes be challenging to determine historical state; help in making this accurate is greatly appreciated.",http://www.openssl.org,https://github.com/openssl/openssl,OpenSSL,?,,Unmet,"At the time, OpenSSL had not acquired a TLS certificate.",Met,,Unmet,"The project website did not provide clear information on how to contribute to the software, nor did it provide clear information on the requirements for acceptable contributions.  E.g., README and CONTRIBUTING were not provided directly on the project website.",Met,"The FAQ explains how to submit bug reports and security vulnerability reports (via email); this can be seen here: https://web.archive.org/web/20140223000630/http://www.openssl.org/support/faq.html#BUILD16

The information is less clear about how to submit improvements, but a reader might guess that the same process could be used.  However, there was no information on the requirements for acceptable contributions, and since OpenSSL is widely depended on and involves complex cryptographic issues, there really isn't a good rationale for not explaining the requirements for acceptable contributions.",Unmet,,Met,"The license is provided in a file named LICENSE inside the top level directory.  You can see this in the tarball, see: https://web.archive.org/web/20140301033200/http://www.openssl.org/source/openssl-1.0.0l.tar.gz internal file openssl-1.0.0l/LICENSE.",Met,"OpenSSL uses an unusual license that is known to be FLOSS.  [GNU's ""Various Licenses and Comments about Them""](https://www.gnu.org/licenses/license-list.html) lists this as a ""GPL-Incompatible Free Software License"".  It is listed by [Debian](https://www.debian.org/legal/licenses/) as a ""license found in main"", and [Fedora](https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing) lists it as a ""good"" license.
",Unmet,,Met,,Met,,Met,,Met,,Unmet,,Met,"Historically CVS had been used, but by February 2014 the OpenSSL project had switched to git.  This can be shown by examining the anachronistically-named ""openssl-cvs"" mailing list postings where key commits were posted: http://marc.info/?l=openssl-cvs&r=1&w=2 ; at the time the lists were run by majordomo.  Note that after heartbleed, this was moved to mailman-based mailing lists and the name was changed to openssl-commits.",Met,,Unmet,"Version numbers are of the form 1.0.0l - the first three numbers are similar in format to SemVer, but they do not have exactly the same semantic meaning, and the appended letter is not in SemVer format either.",Met,"When the project used CVS, it used CVS tags (Not as useful, but they worked).

As explained at <https://www.openssl.org/source/gitrepo.html>, the OpenSSL software is now developed using a Git repository. Read-only access to the repository is available at git.openssl.org. The project also maintains a downstream clone on GitHub, at https://github.com/openssl/openssl on GitHub. This repository is updated with every commit and is accessible through a number of protocols.  Each release is tagged using git tags.

You can see the release tags today via <https://github.com/openssl/openssl/releases>; note that many tags long predate disclosure of the Heartbleed vulnerability.",Met,The NEWS file in the tarball top directory does provide this.  See https://web.archive.org/web/20140301033200/http://www.openssl.org/source/openssl-1.0.0l.tar.gz in file openssl-1.0.0l/NEWS,Met,,?,,Unmet,,Met,Bug reporting process is here (reports sent via email): https://web.archive.org/web/20140223000630/http://www.openssl.org/support/faq.html#BUILD16,Unmet,,Unmet,,Met,http://rt.openssl.org,Unmet,"The README file did describe how to submit bug reports and patches to OpenSSL, and the FAQ noted this.  However, it was not made clear if vulnerability reports were to use the same process or some different process.",Unmet,,Unmet,,Met,,Met,,Met,not for windows.,Met,,Met,,Unmet,,Unmet,,Unmet,,Unmet,,Unmet,,Unmet,,Unmet,,Met,"Dr. Stephen N. Henson, core member of OpenSSL, has this knowledge.",Met,"Dr. Stephen N. Henson, core member of OpenSSL, has this knowledge.",,"we provide implementations of some uncommon crpyto, although don't use it within the project.",,"The primary purpose of this library is to implement cryptography, so this criterion is N/A.",,"The primary purpose of this library is to implement cryptography, and it is itself FLOSS, so this criterion is N/A.",Unmet,,Unmet,,Met,,,,Met,,Unmet,,Unmet,,Unmet,,Unmet,,Unmet,"Many source code weakness analyzers (which are static analysis tools) have been applied to OpenSSL's code at one time or another.  In particular, OpenSSL has been in Coverity Scan's list since February 2006; see <https://scan.coverity.com/projects/294>. However, there was no general plan to run any analyzer before a production release was released.",Unmet,,Unmet,,Unmet,,Unmet,,Unmet,,Met,,Unmet,,"Since this is *historical* information, this badge entry disables the inactivity reminder.  For the current state of OpenSSL, see the [current OpenSSL badge entry](https://bestpractices.coreinfrastructure.org/projects/54).",2016-04-08 13:33:55 UTC,2016-09-13 19:01:16 UTC,Unmet,,Unmet,,cpe:2.3:a:openssl:openssl:1.0.1:*:*:*:*:*:*:*,Unmet,,Met,,Met,,Met,,,,,,,,,,Unmet,,Met,,Unmet,,63,,,,True,"C, Perl, C++ (CII estimate)",3,7,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,13,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,63,,,,,,,,,Met,
28,88,72,Syncthing,Open Source Continuous File Synchronization,https://syncthing.net,https://github.com/syncthing/syncthing,MPL-2.0,?,,Met,,Met,https://syncthing.net/,Met,,Met,Non-trivial contribution file in repository: <https://github.com/syncthing/syncthing/blob/master/CONTRIBUTING.md>.,Met,https://docs.syncthing.net/dev/contributing.html,Met,Non-trivial license location file in repository: <https://github.com/syncthing/syncthing/blob/master/LICENSE>.,Met,The MPL-2.0 license is approved by the Open Source Initiative (OSI).,Met,The MPL-2.0 license is approved by the Open Source Initiative (OSI).,Met,https://docs.syncthing.net/,Met,https://docs.syncthing.net/intro/gui.html,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,"Master contains all commits publicly, as well as feature branches.",Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,Signed git tags are used.,Met,"Release notes are written per each release on Github, in some part automated by script based on resolved tickets in commit history.
https://github.com/syncthing/syncthing/releases/latest",Met,,?,,Met,,Met,"Github issue tracker is linked from the UI and website
https://github.com/syncthing/syncthing/issues",Met,,Met,,Met,"The Github issue tracker is public and searchable
https://github.com/syncthing/syncthing/issues",Met,https://syncthing.net/security.html,Met,https://syncthing.net/security.html,Met,Currently no such reports have been received,Met,"Build script included, instructions at https://docs.syncthing.net/dev/building.html",Unmet,Syncthing follows best practices for Go,Met,,Met,,Met,,Unmet,"This sounds like close to 100% test coverage, which we do not have. We do however increase our test coverage over time.",Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,Met,,,,,,Met,,Unmet,,,,Unmet,,Met,,,2016-04-09 06:54:34 UTC,2016-05-19 15:28:54 UTC,Met,,Met,,,Met,GitHub supports discussions on issues and pull requests.,Met,,Met,,Met,We use all available static analysis and similar tools for Go,Met,,Met,,Met,,Met,,?,,Met,"Single binary installation / uninstallation, plus APT distribution.",Met,,99,2016-04-09 07:18:00 UTC,2021-04-11 18:16:19 UTC,2022-04-06 23:00:40 UTC,False,"Go, JavaScript, Shell (CII estimate)",10,5,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,4,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,?,,Unmet,,Unmet,,99,,,,,,2016-04-09 07:18:00 UTC,,,Met,
29,92,77,google_maps_geocoder,A simple Plain Old Ruby Object wrapper for geocoding with Google Maps.,https://github.com/ivanoblomov/google_maps_geocoder,https://github.com/ivanoblomov/google_maps_geocoder,MIT,?,,Met,Given only https: URLs.,Met,,Met,,Met,"Projects on GitHub by default use issues and pull requests, as encouraged by documentation such as <https://guides.github.com/activities/contributing-to-open-source/>.",Met,The [contributing guidelines](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/CONTRIBUTING.md) specify the requirements for contributions.,Met,Non-trivial license location file in repository: <https://github.com/ivanoblomov/google_maps_geocoder/blob/master/LICENSE.txt>.,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,The MIT license is approved by the Open Source Initiative (OSI).,Met,,Met,,Met,"Repository on GitHub, which provides public git repositories with URLs.",Met,"Repository on GitHub, which uses git. git can track the changes, who made them, and when they were made.",Met,,Met,"Repository on GitHub, which uses git. git is distributed.",Met,,Met,,Met,,Met,[Release notes](https://github.com/ivanoblomov/google_maps_geocoder/releases) have been documented since `0.7`.,Met,,?,,Met,This project uses [GitHub Issues](https://github.com/ivanoblomov/google_maps_geocoder/issues/new/choose).,Met,Users can file bug reports via [GitHub Issues](https://github.com/ivanoblomov/google_maps_geocoder/issues/new?assignees=&labels=bug&template=bug-report.md).,Met,,Met,,Met,[GitHub Issues](https://github.com/ivanoblomov/google_maps_geocoder/issues) archives all reports and responses.,Met,[GitHub Issues](https://github.com/ivanoblomov/google_maps_geocoder/issues/new?assignees=&labels=bug&template=bug-report.md) documents the reporting process.,,,Met,,Met,Non-trivial build file in repository: <https://github.com/ivanoblomov/google_maps_geocoder/blob/master/Rakefile>.,Met,Non-trivial build file in repository: <https://github.com/ivanoblomov/google_maps_geocoder/blob/master/Rakefile>.,Met,,Met,CI [runs tests](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml) automatically with every commit.,Met,CI [runs RSpec](https://github.com/ivanoblomov/google_maps_geocoder/actions) with every commit.,Met,,Met,A README badge displays [test-coverage metrics](https://coveralls.io/repos/78138/builds).,Met,,Met,This is documented in the [pull-request template](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/PULL_REQUEST_TEMPLATE.md).,Met,The CI workflow [integrates rubocop](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml#L33).,Met,,,This project is in Ruby and so requires no compilation.,Met,,Met,,Met,HTTPS is used for all [outgoing calls](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/lib/google_maps_geocoder/google_maps_geocoder.rb#L20).,Met,,,Only a single network call is made and only via HTTPS.,Met,Only Google's API keys are used.,Met,Only Google's API keys are used.,Met,The runtime is stateless involving only one request and response.,,No user passwords are ever used.,,No keys or nonces are generated.,Met,Only HTTPS is used to make network calls.,Met,No hashes are retrieved.,Met,CI [integrates Dependabot](https://github.com/ivanoblomov/google_maps_geocoder/security/dependabot).,Met,CI [integrates Dependabot](https://github.com/ivanoblomov/google_maps_geocoder/security/dependabot).,Met,"CI integrates Code Climate, Coveralls, Dependabot, and RuboCop.",Met,Code Climate [scans for vulnerabilities](https://codeclimate.com/security/).,Met,Dependabot automatically opens PRs for known vulnerabilities.,Met,CI runs on [every commit](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml#L6-L7).,Unmet,"Since all user input is validated as a URI and then passed on to the Google Maps API, we achieve our security goal of parity with the Google Maps API.",,Project uses Ruby.,Unmet,"Since all user input is validated as a URI and then passed on to the Google Maps API, we achieve our security goal of parity with the Google Maps API.",,,,2016-04-12 19:52:14 UTC,2021-11-27 20:14:05 UTC,Met,Only Google's API keys are used.,Met,[CI runs](https://github.com/ivanoblomov/google_maps_geocoder/actions) with every commit.,,Met,GitHub supports discussions on issues and pull requests.,Met,No private keys are used.,Met,,,"As an API-wrapper library, this project only makes HTTPS requests to the Google Maps API, so hardened response headers won't apply. Since it isn't compiled, neither will compiler flags. We believe the scope for attack is limited to address input and vulnerabilities in its dependencies and Ruby itself. We mitigate the former's risk by confirming input is a valid URI (which effectively reduces the library's vulnerability to that of the Maps API), while we address the latter risks by using Dependabot to patch known vulnerabilities automatically.",Met,All network calls are [made via HTTPS](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/lib/google_maps_geocoder/google_maps_geocoder.rb#L20) since Google Maps requires it.,,"As a client library to Google Maps, this project relies on Google to enforce the specific HTTPS standard.",,"As a client library to Google Maps, this project relies on Google to enforce the specific HTTPS standard.",,"As a client library to Google Maps, this project relies on Google to enforce the specific HTTPS standard.",Met,"GitHub [hosts the source](https://github.com/ivanoblomov/google_maps_geocoder/), while RubyGems.org [hosts the gem](https://rubygems.org/gems/google_maps_geocoder).",Met,Users can uninstall by reversing the [installation instructions](https://github.com/ivanoblomov/google_maps_geocoder#installation) and using `gem uninstall`.,,This project is a Ruby gem and so does not require compilation.,100,2021-11-11 11:04:56 UTC,,2021-08-22 23:01:27 UTC,False,Ruby (CII estimate),88,98,Met,"The [contributing guidelines](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/CONTRIBUTING.md) specify a DCO, while the [PR template](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/blob/master/.github/PULL_REQUEST_TEMPLATE.md) includes the `signed-off-by` line.",Met,The Wiki documents our [governance model](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Governance).,Met,The project has adopted the [Ruby Community Conduct Guideline](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/CODE_OF_CONDUCT.md).,Met,The [governance model](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Governance) documents roles and responsibilities.,?,,Met,Olle Jonsson and Roderick Monje are both very familiar with the software and could easily continue its maintenance if necessary. A few others have contributed and some of them could also probably maintain it if absolutely necessary. See [GitHub contributors statistics](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/graphs/contributors) for the latest statistics on contributors.,Met,The Wiki documents the [project roadmap](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Roadmap).,Met,The Wiki documents the [project architecture](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Implementation).,Met,The Wiki documents the [security requirements](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Security).,Met,The README includes a [quick-start guide](https://github.com/ivanoblomov/google_maps_geocoder#installation).,Met,Complete RDoc documentation is available at [RubyDoc.info](https://www.rubydoc.info/gems/google_maps_geocoder).,Met,The [README](https://github.com/ivanoblomov/google_maps_geocoder#googlemapsgeocoder) displays the CII badge.,,This project is a Ruby library.,,"This project is a geocoding library for Google Maps. Client input is passed as is to Google Maps and the latter’s output is returned as is. Since Maps is global, internationalization is already built-in.",,No user passwords are used.,Met,Interfaces have been preserved since the first release.,Met,All vulnerabilities have so far been [reported by Dependabot](https://github.com/ivanoblomov/google_maps_geocoder/pulls?q=is%3Apr+author%3Aapp%2Fdependabot+is%3Aclosed).,Met,Dependabot automatically addresses known vulnerabilities. Users can also [report ones they find](https://github.com/ivanoblomov/google_maps_geocoder/issues/new/choose).,Met,CI [runs rubocop](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml#L33) which enforces standard Ruby style.,Met,CI [runs rubocop](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml#L33) which enforces standard Ruby style.,,No native binaries are involved.,,No build/installation system involving compilation is used since this is a Ruby gem.,,No build/installation system involving compilation is used since this is a Ruby gem.,,No build/installation system involving compilation is used since this is a Ruby gem.,Met,"This project, being a Ruby gem, follows standard conventions.",Met,This project notes [required environment variables](https://github.com/GoogleMapsGeocoder/google_maps_geocoder#installation) in the README and CI [runs standard RSpec](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/actions/workflows/test.yml) for testing.,Met,All dependencies are maintained by Bundler in a [gemspec](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/google_maps_geocoder.gemspec).,Met,Dependabot automatically patches known vulnerabilities by [opening pull requests](https://github.com/ivanoblomov/google_maps_geocoder/pulls?q=is%3Apr+is%3Aclosed+author%3Aapp%2Fdependabot) which are promptly merged.,Met,"1. All dependencies are listed in the [gemspec](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/google_maps_geocoder.gemspec) and maintained by Bundler.
2. Dependabot automatically patches known vulnerabilities by [opening pull requests](https://github.com/ivanoblomov/google_maps_geocoder/pulls?q=is%3Apr+is%3Aclosed+author%3Aapp%2Fdependabot) which are promptly merged.",Met,"CI [calls rubocop](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/workflows/test.yml#L33), which identifies deprecated/obsolete functions as failures.",Met,CI invokes RSpec as a GitHub Action and displays results as a [badge in the README](https://github.com/ivanoblomov/google_maps_geocoder).,Met,"No programmatic bugs (as opposed to CI) have been reported in the last six months, but adding regression tests is SOP anyway.",Met,CI currently reports [100% coverage](https://coveralls.io/github/ivanoblomov/google_maps_geocoder?branch=master).,Met,This is documented in the [contributing guidelines](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/CONTRIBUTING.md).,Met,"Because Google Maps requires an API key, the library will fail by default since there is no default key. All access is limited to the one network call to the Google Maps endpoint.",Met,"Any potential user input is escaped and parsed as a URI: invalid URIs will throw exceptions, while valid URIs will be dispatched to Google Maps, effectively achieving security parity with the Maps API.",,"Apart from HTTPS, no crytographic algorithms are used.",Met,All credentials are stored as [environment variables](https://github.com/ivanoblomov/google_maps_geocoder#installation).,Met,Releases are signed beginning with version `0.7.5`; the README documents how to [verify the signature](https://github.com/GoogleMapsGeocoder/google_maps_geocoder#security-note).,Unmet,The vast majority of installations have been through [RubyGems.org](https://rubygems.org/gems/google_maps_geocoder) and releases there have been signed since version `0.7.5`.,87,Met,"There are at least [four contributors](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/graphs/contributors), and at least two significant contributors today: Olle Jonsson at Auctionet and Roderick Monje at Fovea Central.",Met,"All original source files include the copyright notice...

https://github.com/ivanoblomov/google_maps_geocoder/blob/master/lib/google_maps_geocoder/google_maps_geocoder.rb
https://github.com/ivanoblomov/google_maps_geocoder/blob/master/spec/lib/google_maps_geocoder_spec.rb",Met,"All original source files include the license notice...

https://github.com/ivanoblomov/google_maps_geocoder/blob/master/lib/google_maps_geocoder/google_maps_geocoder.rb
https://github.com/ivanoblomov/google_maps_geocoder/blob/master/spec/lib/google_maps_geocoder_spec.rb",Met,"Small, introductory tasks are labeled [up-for-grabs](https://github.com/ivanoblomov/google_maps_geocoder/labels/up-for-grabs).",Met,We require two-factor authentication for all organization members and outside collaborators as described in [Requiring two-factor authentication in your organization](https://docs.github.com/en/organizations/keeping-your-organization-secure/requiring-two-factor-authentication-in-your-organization).,Met,"2FA is required, but [SMS is unacceptable](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/wiki/Governance#process).",Met,The [pull-request template](https://github.com/ivanoblomov/google_maps_geocoder/blob/master/.github/PULL_REQUEST_TEMPLATE.md) specifies code-review requirements.,Met,Our [contributing guidelines](https://github.com/GoogleMapsGeocoder/google_maps_geocoder/blob/master/.github/CONTRIBUTING.md) specify that all but low-risk modifications be reviewed by someone else and that at least 50% of all proposed modifications be reviewed.,Met,CI currently shows [100% coverage](https://coveralls.io/github/ivanoblomov/google_maps_geocoder?branch=master).,,"There are no top-to-bottom FLOSS tools available in Ruby which can measure branch coverage. Ruby version 2.5 was the first version that enabled capturing branch coverage, and it was only released on 2017-12-25. Other tools on top of Ruby need to be modified so that they can use this information.",?,,Met,The Wiki documents an [assurance case](https://github.com/ivanoblomov/google_maps_geocoder/wiki/Security).,Met,,Unmet,,198,,,,,,2021-11-11 11:04:56 UTC,,,Met,
